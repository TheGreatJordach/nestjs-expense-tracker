var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppConfigurationModule.html",[0,0.851,1,1.934]],["body/modules/AppConfigurationModule.html",[0,1.306,1,2.967,2,1.518,3,0.502,4,0.45,5,0.45,6,3.972,7,0.846,8,0.03,9,0.948,10,5.05,11,4.231,12,3.328,13,3.328,14,2.904,15,4.058,16,3.691,17,3.972,18,2.587,19,3.972,20,2.699,21,3.972,22,3.972,23,2.269,24,3.972,25,3.972,26,3.972,27,2.587,28,3.972,29,3.972,30,3.972,31,3.972,32,0.45,33,0.093,34,0.023,35,0.023]],["title/modules/AppModule.html",[0,0.851,36,2.144]],["body/modules/AppModule.html",[0,1.394,1,3.563,2,1.427,3,0.472,4,0.423,5,0.423,7,0.801,8,0.03,9,0.892,20,2.594,32,0.423,33,0.088,34,0.022,35,0.022,36,4.157,37,1.546,38,1.826,39,1.826,40,1.546,41,2.374,42,1.826,43,3.129,44,3.129,45,3.563,46,3.563,47,2.374,48,1.826,49,1.678,50,3.734,51,3.734,52,1.129,53,2.432,54,3.734,55,3.734,56,2.73]],["title/controllers/AuthController.html",[57,2.144,58,2.144]],["body/controllers/AuthController.html",[3,0.415,4,0.372,5,0.372,7,0.761,8,0.03,9,0.784,32,0.372,33,0.077,34,0.02,35,0.02,52,0.993,56,2.4,57,2.138,58,2.902,59,2.751,60,3.283,61,3.283,62,0.665,63,2.179,64,2.971,65,4.456,66,3.283,67,3.197,68,1.475,69,3.283,70,4.456,71,2.548,72,3.733,73,3.283,74,4.456,75,2.245,76,4.456,77,3.283,78,2.902,79,2.179,80,0.939,81,3.283,82,0.919,83,3.283,84,1.359,85,1.359,86,1.073,87,1.475,88,3.283,89,3.283,90,3.283,91,3.283,92,4.456,93,2.751,94,4.456,95,5.057,96,3.283,97,1.929,98,2.703,99,3.283,100,3.283,101,3.283,102,2.4,103,1.255,104,3.283,105,4.456,106,2.751,107,3.283,108,3.283,109,1.475,110,3.283]],["title/injectables/AuthService.html",[98,1.759,111,1.163]],["body/injectables/AuthService.html",[3,0.452,4,0.404,5,0.404,7,0.787,8,0.03,9,0.852,32,0.404,33,0.084,34,0.022,35,0.022,52,1.425,62,0.723,63,2.305,67,3.202,78,2.325,80,0.875,82,1.319,84,1.951,85,1.951,86,1.541,87,1.604,93,2.992,98,2.519,103,1.801,109,1.604,111,1.665,112,1.909,113,2.992,114,4.713,115,3.069,116,3.571,117,3.202,118,2.529,119,3.571,120,4.713,121,3.571,122,0.999,123,3.571,124,2.992,125,3.069,126,3.571,127,3.571,128,3.571,129,3.571,130,3.571]],["title/classes/BcryptAlgorithmProvider.html",[33,0.077,131,1.934]],["body/classes/BcryptAlgorithmProvider.html",[3,0.234,4,0.209,5,0.209,7,0.507,8,0.031,9,0.441,23,1.311,32,0.209,33,0.043,34,0.013,35,0.013,62,0.374,63,1.427,64,2.791,71,1.311,79,2.008,80,0.671,82,1.149,84,1.496,85,1.496,86,1.182,87,2.008,103,1.382,109,2.008,122,1.759,125,3.094,131,1.714,132,0.83,133,1.548,134,2.917,135,2.354,136,1.115,137,3.615,138,3.981,139,3.981,140,2.917,141,1.085,142,2.354,143,2.917,144,2.917,145,1.847,146,2.444,147,4.234,148,4.723,149,1.847,150,4.106,151,2.917,152,2.674,153,3.851,154,3.001,155,3.769,156,3.029,157,3.44,158,2.917,159,3.028,160,2.444,161,2.444,162,1.847,163,2.917,164,4.106,165,4.106,166,2.917,167,1.115,168,2.917,169,2.917,170,2.917,171,1.847,172,2.132,173,1.847,174,3.745,175,3.028,176,2.444,177,3.44,178,2.444,179,2.444,180,1.847,181,2.444,182,2.917,183,1.847,184,2.412,185,2.917,186,4.106,187,2.444,188,2.354,189,1.847,190,2.444,191,2.917,192,1.085,193,1.847,194,1.847,195,1.548,196,1.847,197,1.9,198,2.132,199,2.917,200,1.847,201,1.847,202,1.847,203,1.548,204,1.847]],["title/classes/CreateUserDto.html",[33,0.077,67,1.759]],["body/classes/CreateUserDto.html",[3,0.336,4,0.301,5,0.301,7,0.633,8,0.03,23,1.194,32,0.301,33,0.09,34,0.018,35,0.018,52,0.804,62,0.538,67,2.053,68,2.356,71,1.194,75,1.591,80,0.974,82,1.467,86,1.256,97,1.561,103,2.311,122,1.467,132,1.194,136,1.468,167,1.468,205,1.075,206,2.227,207,3.219,208,3.311,209,3.311,210,1.726,211,2.257,212,2.257,213,2.257,214,2.658,215,3.842,216,4.142,217,3.842,218,4.512,219,5.466,220,3.842,221,2.658,222,3.842,223,4.218,224,3.842,225,3.842,226,3.842,227,3.842,228,3.842,229,3.842,230,3.842,231,3.842,232,3.842,233,3.842,234,3.842,235,3.842,236,2.658,237,4.142,238,2.227,239,4.943,240,2.658,241,2.227,242,2.658,243,2.227,244,1.943,245,2.658,246,2.227,247,2.227,248,2.658,249,2.227,250,3.78,251,1.561,252,3.219,253,2.658,254,2.658,255,2.227,256,2.227,257,2.227]],["title/entities/Expense.html",[52,0.996,258,1.759]],["body/entities/Expense.html",[3,0.319,4,0.286,5,0.286,7,0.615,8,0.03,32,0.286,33,0.059,34,0.017,35,0.017,52,1.119,62,0.511,68,2.608,71,1.969,75,2.403,80,1.135,82,1.624,122,1.35,136,1.415,141,2.174,167,1.844,205,1.651,258,1.349,259,1.644,260,2.115,261,3.527,262,3.671,263,3.671,264,3.527,265,5.011,266,2.342,267,3.671,268,4.825,269,3.671,270,2.525,271,3.755,272,4.043,273,2.525,274,2.525,275,3.671,276,2.525,277,3.101,278,2.41,279,3.671,280,2.525,281,2.525,282,4.055,283,2.525,284,3.203,285,2.525,286,3.671,287,2.525,288,2.525,289,3.101,290,2.525,291,3.101,292,1.644,293,2.525,294,2.525,295,2.115,296,1.644,297,2.115,298,2.115,299,2.115,300,2.115,301,2.115,302,2.115,303,2.115,304,2.115,305,2.115,306,2.115,307,2.115]],["title/modules/ExpenseModule.html",[0,0.851,308,1.934]],["body/modules/ExpenseModule.html",[0,1.443,2,1.536,3,0.508,4,0.455,5,0.455,7,0.713,8,0.03,9,0.959,32,0.455,33,0.095,34,0.023,35,0.023,37,1.663,38,1.965,39,1.965,40,1.663,41,2.729,42,2.729,47,2.487,48,1.965,49,1.805,205,1.124,308,3.689,309,3.366,310,3.366,311,3.366,312,3.493,313,4.017,314,4.017]],["title/injectables/ExpenseService.html",[111,1.163,312,1.759]],["body/injectables/ExpenseService.html",[3,0.604,4,0.541,5,0.541,7,0.67,8,0.029,9,1.141,32,0.541,33,0.112,34,0.026,35,0.026,111,1.999,112,2.554,205,1.337,312,3.023,315,4.003]],["title/modules/ExpenseTrackerModule.html",[0,0.851,45,1.934]],["body/modules/ExpenseTrackerModule.html",[0,1.364,2,1.365,3,0.452,4,0.404,5,0.404,7,0.818,8,0.03,9,0.852,20,2.519,32,0.404,33,0.084,34,0.022,35,0.022,37,1.478,38,1.746,39,1.746,40,1.478,41,2.58,42,1.746,45,3.775,47,2.305,48,1.746,49,1.604,52,1.08,53,2.325,118,2.48,205,0.999,308,3.52,316,2.992,317,2.992,318,2.992,319,3.202,320,3.52,321,3.571,322,3.571,323,3.571,324,3.571,325,2.992]],["title/injectables/ExpenseTrackerService.html",[111,1.163,320,1.934]],["body/injectables/ExpenseTrackerService.html",[3,0.51,4,0.457,5,0.457,7,0.784,8,0.03,9,0.963,32,0.457,33,0.095,34,0.023,35,0.023,53,3.32,80,0.749,82,1.128,84,1.67,85,1.67,86,1.318,103,1.949,111,1.802,112,2.155,115,3.32,118,2.562,125,3.32,205,1.426,312,3.359,320,2.995,325,3.379,326,3.379,327,4.033,328,4.033,329,4.033]],["title/interfaces/IHash.html",[135,2.144,330,2.144]],["body/interfaces/IHash.html",[3,0.488,4,0.437,5,0.437,8,0.03,32,0.437,34,0.023,35,0.023,62,0.781,63,2.423,80,0.92,82,1.386,84,2.052,85,2.052,86,1.62,87,2.227,122,1.781,135,3.227,138,4.152,139,4.152,146,4.152,147,4.472,148,4.587,153,3.227,156,3.395,161,4.152,330,2.512,331,3.857,332,3.231,333,3.857,334,3.857]],["title/modules/IamModule.html",[0,0.851,46,1.934]],["body/modules/IamModule.html",[0,1.346,2,1.329,3,0.44,4,0.394,5,0.394,7,0.834,8,0.03,9,0.83,20,2.475,32,0.394,33,0.082,34,0.021,35,0.021,37,1.44,38,1.701,39,1.701,40,1.44,41,2.546,42,1.701,46,3.76,47,2.265,48,1.701,49,1.562,52,1.401,56,3.385,58,3.391,98,3.178,118,2.462,124,2.913,319,3.178,335,2.913,336,2.913,337,2.913,338,3.493,339,3.477,340,3.477,341,3.477,342,3.477,343,3.477]],["title/classes/IdDto.html",[33,0.077,344,2.406]],["body/classes/IdDto.html",[3,0.559,4,0.5,5,0.5,7,0.62,8,0.03,32,0.5,33,0.127,34,0.025,35,0.025,62,0.895,68,1.986,80,0.821,82,1.236,132,1.986,136,2.063,167,2.063,251,2.596,266,3.114,344,3.945,345,3.703,346,4.419,347,4.419,348,4.522,349,4.522]],["title/modules/PasswordModule.html",[0,0.851,338,1.934]],["body/modules/PasswordModule.html",[0,1.431,2,1.507,3,0.499,4,0.446,5,0.446,7,0.776,8,0.03,9,0.941,32,0.446,33,0.093,34,0.023,35,0.023,37,1.632,38,1.928,39,1.928,40,1.632,41,2.706,42,2.706,47,2.458,48,1.928,49,1.772,117,3.484,131,2.953,338,3.674,350,3.303,351,3.303,352,3.303,353,3.943,354,3.943,355,3.303]],["title/injectables/PasswordProvider.html",[111,1.163,117,1.759]],["body/injectables/PasswordProvider.html",[3,0.417,4,0.373,5,0.373,7,0.626,8,0.03,9,0.786,32,0.373,33,0.077,34,0.02,35,0.02,62,0.667,63,2.184,64,3.439,80,0.941,82,1.417,84,2.097,85,2.097,86,1.656,87,2.006,102,2.408,103,1.259,109,2.006,111,1.578,112,1.76,115,2.145,117,2.386,122,1.727,131,3.191,147,4.278,156,3.191,188,2.908,209,1.935,355,2.759,356,2.759,357,5.066,358,4.465,359,3.294,360,3.294,361,4.465,362,3.294,363,5.431,364,3.294,365,4.465,366,4.465,367,3.294,368,3.294,369,3.294]],["title/classes/PublicUserDto.html",[33,0.077,370,2.406]],["body/classes/PublicUserDto.html",[3,0.424,4,0.38,5,0.38,7,0.634,8,0.03,32,0.38,33,0.106,34,0.021,35,0.021,52,1.547,62,0.679,68,2.567,80,1.061,82,1.598,103,2.473,122,1.646,132,1.508,136,1.728,167,1.728,205,1.646,210,2.298,211,3.005,212,3.005,213,3.005,266,2.734,370,3.306,371,2.812,372,6.318,373,3.356,374,3.356,375,3.356,376,3.356,377,3.356,378,2.453,379,2.186]],["title/classes/UpdateUserDto.html",[33,0.077,380,2.144]],["body/classes/UpdateUserDto.html",[3,0.583,4,0.522,5,0.522,7,0.777,8,0.03,32,0.522,33,0.109,34,0.025,35,0.025,97,2.709,132,2.072,205,1.29,207,4.64,208,2.709,249,3.864,380,3.606,381,3.864,382,5.538,383,4.612]],["title/entities/User.html",[75,1.363,258,1.759]],["body/entities/User.html",[3,0.397,4,0.355,5,0.355,7,0.606,8,0.03,23,1.941,32,0.355,33,0.074,34,0.02,35,0.02,52,1.744,62,0.635,68,2.592,75,1.788,80,1.071,82,1.614,86,1.412,122,1.684,136,1.651,167,1.651,205,1.653,209,2.902,210,2.219,211,2.902,212,2.902,213,2.902,258,1.677,259,2.043,266,2.64,282,4.401,284,3.611,292,2.043,378,2.294,384,2.629,385,3.138,386,3.138,387,3.138,388,3.619,389,4.319,390,4.319,391,3.138,392,3.138,393,3.138,394,3.138,395,3.138,396,3.619,397,2.629,398,2.629]],["title/classes/UserBaseDto.html",[33,0.077,208,1.934]],["body/classes/UserBaseDto.html",[3,0.379,4,0.339,5,0.339,7,0.732,8,0.03,23,1.879,32,0.339,33,0.113,34,0.019,35,0.019,52,1.66,62,0.606,68,2.344,80,1.137,82,1.459,86,1.367,97,1.76,103,2.387,122,1.692,132,1.346,136,1.599,205,1.535,208,2.458,210,2.166,211,2.832,212,2.832,213,2.832,237,4.371,238,2.51,241,2.51,243,2.51,244,3.523,246,2.51,247,2.51,251,1.76,252,4.598,278,1.951,378,2.19,379,1.951,399,2.51,400,2.996,401,2.996,402,2.996,403,2.996,404,4.183,405,4.371,406,4.183,407,4.038,408,4.183,409,3.505,410,2.51]],["title/modules/UserModule.html",[0,0.851,319,1.759]],["body/modules/UserModule.html",[0,1.413,2,1.469,3,0.486,4,0.435,5,0.435,7,0.809,8,0.03,9,0.917,13,3.22,14,2.809,20,2.054,32,0.435,33,0.09,34,0.023,35,0.023,37,1.591,38,1.879,39,1.879,40,1.591,41,2.673,42,2.673,47,2.418,48,1.879,49,1.727,75,1.591,118,2.689,205,1.075,319,3.322,411,3.22,412,3.843,413,3.22,414,3.843,415,3.843,416,3.22,417,3.843]],["title/injectables/UserService.html",[111,1.163,118,1.363]],["body/injectables/UserService.html",[3,0.153,4,0.137,5,0.137,7,0.581,8,0.031,9,0.289,27,0.789,32,0.137,33,0.029,34,0.009,35,0.009,62,0.245,63,1.009,64,3.324,67,2.212,71,1.21,75,2.573,78,2.07,79,2.132,80,0.809,82,1.219,84,1.804,85,1.804,86,1.425,87,2.115,102,0.886,103,0.463,109,2.329,111,0.729,112,0.648,115,0.789,118,0.854,122,0.997,125,2.96,152,2.526,153,2.07,154,0.886,156,3.226,157,3.25,167,1.981,172,1.969,174,1.015,175,2.256,176,2.664,177,3.468,178,1.728,179,2.256,181,1.015,184,2.561,187,2.664,188,2.696,190,2.664,192,2.561,195,1.015,197,0.789,198,2.324,203,1.728,205,1.272,210,2.678,266,1.439,292,0.789,296,1.343,380,2.838,416,1.015,418,1.015,419,2.063,420,2.063,421,2.063,422,3.179,423,2.063,424,2.693,425,1.212,426,3.25,427,1.212,428,2.063,429,1.212,430,2.063,431,3.179,432,2.063,433,2.063,434,3.179,435,2.063,436,1.212,437,2.063,438,1.212,439,2.063,440,1.212,441,2.063,442,4.167,443,2.693,444,3.179,445,2.063,446,1.212,447,2.063,448,3.879,449,3.179,450,3.179,451,2.063,452,2.063,453,2.693,454,1.212,455,1.212,456,1.212,457,2.693,458,2.063,459,2.664,460,2.693,461,1.212,462,1.212,463,1.508,464,1.212,465,1.212,466,1.212,467,1.212,468,1.015,469,2.063,470,1.212,471,1.212,472,2.693,473,1.212,474,1.212,475,1.212,476,2.063,477,1.212,478,1.212,479,1.212,480,1.212,481,2.063,482,2.063,483,1.212,484,2.063,485,1.212,486,1.212,487,1.212,488,1.212,489,1.212,490,3.179,491,0.886,492,0.886,493,1.212,494,1.212,495,1.212,496,1.015,497,2.693,498,2.063,499,2.063,500,1.212,501,1.212,502,1.212,503,1.212,504,1.212]],["title/classes/ValidateEnvVariables.html",[18,2.144,33,0.077]],["body/classes/ValidateEnvVariables.html",[3,0.241,4,0.216,5,0.216,7,0.586,8,0.03,9,0.455,18,1.948,23,0.857,32,0.216,33,0.087,34,0.014,35,0.014,62,0.386,63,1.463,68,2.674,79,0.933,80,1.114,82,1.679,84,0.79,85,0.79,86,0.623,87,0.857,106,1.598,109,0.857,122,1.76,132,0.857,136,1.143,155,1.394,159,1.598,167,1.841,184,1.12,192,1.757,197,1.242,198,1.394,244,1.394,250,2.506,251,1.12,278,1.242,348,3.501,349,3.501,379,1.242,405,4.828,407,4.828,409,1.598,459,2.506,505,1.598,506,3.69,507,3.69,508,3.69,509,3.69,510,3.69,511,3.69,512,3.69,513,3.69,514,3.69,515,3.69,516,3.69,517,3.69,518,3.69,519,3.69,520,3.69,521,3.69,522,3.69,523,2.991,524,3.69,525,1.907,526,5.485,527,1.907,528,1.907,529,1.907,530,1.907,531,1.907,532,1.907,533,1.907,534,1.907,535,1.907,536,1.907,537,1.907,538,1.907,539,1.907,540,1.907,541,1.907,542,1.907,543,1.907,544,1.907,545,1.907,546,2.991,547,3.69,548,1.907,549,2.506,550,1.907,551,1.907,552,4.212,553,1.907,554,1.907,555,1.598,556,1.598,557,1.598,558,2.991,559,1.907,560,1.907,561,2.186,562,1.907,563,2.506,564,1.907,565,1.907,566,1.907,567,1.907,568,1.907,569,2.991,570,1.907,571,1.907]],["title/coverage.html",[572,3.263]],["body/coverage.html",[5,0.316,8,0.03,15,2.04,16,2.04,18,1.817,33,0.135,34,0.018,35,0.018,40,1.155,52,0.844,53,1.817,57,1.817,58,1.817,59,2.338,67,1.492,75,1.155,79,1.365,80,0.518,98,1.492,111,1.888,113,2.338,117,1.492,118,1.155,131,1.64,133,2.338,135,1.817,197,4.239,205,1.664,206,2.338,208,1.64,257,2.338,258,2.127,260,2.338,312,1.492,315,2.338,320,1.64,326,2.338,330,1.817,332,2.338,344,2.04,345,2.338,356,2.338,370,2.04,371,2.338,380,1.817,381,2.338,384,2.338,399,2.338,418,2.338,442,2.338,463,2.04,491,4.062,505,2.338,552,2.04,572,2.04,573,2.338,574,2.791,575,2.338,576,6.22,577,4.637,578,2.338,579,2.791,580,2.591,581,2.338,582,5.055,583,2.04,584,2.338,585,2.338,586,3.334,587,2.338,588,2.338,589,3.334,590,2.791,591,3.979,592,2.791,593,2.791,594,2.791,595,3.979,596,2.791,597,2.791,598,2.791,599,2.338,600,2.791,601,2.791]],["title/dependencies.html",[37,1.636,602,2.315]],["body/dependencies.html",[8,0.03,9,0.941,12,3.303,14,2.882,20,2.107,33,0.118,34,0.023,35,0.023,37,1.632,97,2.316,155,2.882,251,2.316,292,2.568,379,2.568,556,3.303,603,3.943,604,3.943,605,5.533,606,3.943,607,3.943,608,3.943,609,4.211,610,3.943,611,3.943,612,3.943,613,3.943,614,3.943,615,3.943,616,3.943,617,3.943,618,5.026,619,3.943,620,3.943,621,3.943,622,3.943,623,3.943,624,3.943,625,3.943,626,3.943,627,3.943,628,3.943,629,3.943,630,3.943,631,3.943]],["title/miscellaneous/enumerations.html",[632,1.242,633,3.31]],["body/miscellaneous/enumerations.html",[8,0.03,34,0.025,35,0.025,62,0.891,142,4.17,205,1.231,271,3.935,632,1.977,633,3.687,634,4.401,635,4.401,636,4.51,637,4.51,638,4.51,639,4.51,640,4.51,641,4.51,642,4.51]],["title/miscellaneous/functions.html",[632,1.242,643,3.31]],["body/miscellaneous/functions.html",[8,0.029,27,2.179,34,0.021,35,0.021,40,2.114,62,0.677,71,1.503,80,1.06,84,2.363,85,2.363,86,1.865,87,2.456,122,1.71,141,2.651,142,2.939,167,2.089,172,2.446,210,2.564,261,3.299,264,4.172,463,3.299,492,2.446,552,3.299,563,2.803,575,2.803,578,2.803,580,2.179,581,3.781,583,3.299,586,2.803,587,3.781,588,3.781,599,2.803,632,1.503,643,2.803,644,3.345,645,2.446,646,3.345,647,4.512,648,3.345,649,3.345,650,3.781,651,3.345,652,5.106,653,3.345,654,3.345,655,3.345,656,2.803,657,3.345,658,5.106,659,2.803,660,2.803]],["title/index.html",[62,0.559,661,2.315,662,2.315]],["body/index.html",[4,0.182,8,0.03,23,0.723,27,1.048,32,0.43,33,0.061,34,0.012,35,0.012,52,1.695,71,1.481,72,1.348,75,2.156,78,1.048,79,1.612,80,0.874,103,0.615,109,0.723,122,1.317,141,0.945,153,2.909,154,1.176,167,1.26,184,0.945,192,0.945,209,0.945,210,2.394,211,2.625,212,0.945,213,0.945,216,3.943,223,1.176,255,1.348,256,2.188,258,1.762,261,2.41,262,2.188,263,1.348,264,1.909,265,3.943,266,1.396,267,1.348,269,2.188,271,2.773,272,3.178,275,1.348,277,1.348,278,1.048,279,3.178,282,3.704,284,1.909,286,1.348,289,1.348,291,1.348,295,1.348,296,2.716,297,1.348,298,1.348,299,1.348,300,1.348,301,1.348,302,2.188,303,1.348,304,1.348,305,1.348,306,1.348,307,1.348,388,1.348,396,1.348,397,1.348,398,2.188,410,1.348,468,1.348,491,1.176,492,1.176,496,1.348,555,1.348,557,1.348,572,1.176,636,2.762,637,2.762,638,2.762,639,2.762,640,2.762,641,2.762,642,2.762,656,1.348,659,1.348,660,1.348,663,2.612,664,4.171,665,4.171,666,3.296,667,2.612,668,3.296,669,1.609,670,1.609,671,2.612,672,2.612,673,2.612,674,2.612,675,1.609,676,2.612,677,2.612,678,1.609,679,2.612,680,3.296,681,2.612,682,1.609,683,1.609,684,1.609,685,1.609,686,3.296,687,1.609,688,3.296,689,2.612,690,2.188,691,1.609,692,1.609,693,1.609,694,1.609,695,1.609,696,1.609,697,2.612,698,1.609,699,1.609,700,1.609,701,2.612,702,1.609,703,1.609,704,2.612,705,2.612,706,2.762,707,1.609,708,1.609,709,1.609,710,1.609,711,1.609,712,1.609,713,1.609,714,1.609,715,1.609,716,1.609,717,1.609,718,1.609,719,1.609,720,1.609,721,2.612,722,1.609,723,1.348,724,1.609,725,1.609,726,4.171,727,1.609,728,1.609,729,1.609,730,1.609,731,1.609,732,1.609,733,1.609,734,1.609,735,1.609,736,2.188,737,1.609,738,1.609,739,1.609,740,1.609,741,1.348,742,1.609,743,1.609,744,1.609,745,2.612,746,1.609,747,1.609,748,1.609,749,1.609,750,1.609,751,1.609,752,1.609,753,1.609,754,1.609,755,1.609,756,1.609,757,1.609,758,1.609,759,1.609,760,1.609,761,1.609,762,1.609,763,1.609,764,4.706,765,1.609,766,1.609,767,4.467,768,1.609,769,2.612,770,1.609,771,1.609,772,1.609,773,1.609,774,2.612,775,2.612,776,1.609,777,1.609,778,1.609,779,2.612,780,1.909,781,2.612,782,1.609,783,1.609,784,1.609,785,1.609,786,1.609,787,1.609,788,1.609,789,1.609,790,1.609,791,1.609,792,1.609,793,1.609,794,1.348,795,1.909,796,1.176,797,1.609,798,1.609,799,1.609,800,1.048]],["title/license.html",[661,2.315,662,2.315,800,1.799]],["body/license.html",[8,0.021,34,0.021,35,0.021,49,1.599,152,2.318,160,2.982,296,3.062,573,2.982,609,2.982,690,2.982,723,2.982,780,2.602,795,2.602,796,2.602,800,2.318,801,5.267,802,3.559,803,3.559,804,4.703,805,3.559,806,3.559,807,3.559,808,3.559,809,3.559,810,4.703,811,6.27,812,3.559,813,3.559,814,3.559,815,5.267,816,3.559,817,4.703,818,3.559,819,3.559,820,3.559,821,3.559,822,3.559,823,3.559,824,3.559,825,3.559,826,3.559,827,4.703,828,3.559,829,3.559,830,3.559,831,3.559,832,3.559,833,3.559,834,4.703,835,4.703,836,3.559,837,3.559,838,3.559,839,3.559,840,3.559,841,3.559,842,3.559,843,3.559,844,3.559,845,3.559,846,3.559,847,3.559,848,3.559,849,3.559,850,3.559,851,3.559,852,3.559,853,3.559,854,3.559,855,3.559,856,3.559,857,3.559,858,3.559,859,3.559,860,3.559,861,3.559,862,3.559]],["title/modules.html",[2,1.706]],["body/modules.html",[1,2.596,2,1.689,8,0.025,34,0.025,35,0.025,36,2.878,45,2.596,46,2.596,308,2.596,319,2.362,338,2.596,736,5.304,863,4.419,864,4.419,865,6.41,866,6.33,867,6.33]],["title/overview.html",[868,3.739]],["body/overview.html",[0,0.799,1,2.88,2,1.182,8,0.03,34,0.02,35,0.02,36,3.907,37,1.28,38,1.512,39,1.512,40,1.28,41,1.512,42,1.512,43,2.59,44,2.59,45,3.658,46,3.658,47,2.091,48,1.512,49,1.389,57,2.013,98,2.62,112,1.652,117,3.146,118,2.521,132,1.389,223,3.126,259,2.013,308,3.373,309,2.59,310,2.59,311,2.59,312,3.146,316,2.59,317,2.59,318,2.59,319,3.146,320,2.88,330,2.013,335,2.59,336,2.59,337,2.59,338,3.373,350,2.59,351,2.59,352,2.59,411,2.59,413,2.59,741,2.59,868,2.59,869,4.276,870,3.092]],["title/properties.html",[136,1.51,602,2.315]],["body/properties.html",[8,0.03,34,0.026,35,0.026,71,2.186,136,1.86,780,3.557,794,4.077,795,3.557,796,3.557,800,3.169,871,4.866,872,4.866]],["title/miscellaneous/typealiases.html",[632,1.242,873,3.951]],["body/miscellaneous/typealiases.html",[8,0.026,34,0.026,35,0.026,62,0.989,80,0.908,210,2.576,580,3.183,632,2.196,645,3.573,650,4.803,874,4.888,875,4.888,876,4.888]],["title/miscellaneous/variables.html",[561,2.888,632,1.242]],["body/miscellaneous/variables.html",[8,0.031,11,3.931,15,3.43,16,3.43,23,1.594,34,0.021,35,0.021,62,0.718,64,2.757,79,2.295,80,0.976,109,1.594,122,0.992,141,3.287,142,3.644,152,2.31,156,2.084,184,2.084,188,2.31,192,2.084,209,2.084,259,2.31,426,3.931,549,3.931,561,2.593,580,2.31,583,3.43,584,2.972,585,3.931,589,2.972,632,1.594,645,2.593,706,2.972,877,4.692,878,3.547,879,3.547,880,3.547,881,3.547,882,3.547,883,3.547,884,3.547,885,3.547,886,3.547,887,3.547,888,3.547,889,3.547,890,3.547,891,3.547,892,4.692,893,3.547,894,3.547,895,3.547,896,3.547,897,3.547]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AppConfigurationModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"entities/Expense.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"modules/ExpenseTrackerModule.html":{},"injectables/ExpenseTrackerService.html":{},"interfaces/IHash.html":{},"modules/IamModule.html":{},"classes/IdDto.html":{},"modules/PasswordModule.html":{},"injectables/PasswordProvider.html":{},"classes/PublicUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":197,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"coverage.html":{}}}],["0.0.1",{"_index":872,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":223,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{},"overview.html":{}}}],["1.1.25",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":257,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["100})@isstrongpassword({minlength",{"_index":221,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["12",{"_index":144,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["2",{"_index":741,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2/5",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["201",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["2024",{"_index":803,"title":{},"body":{"license.html":{}}}],["25",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserBaseDto.html":{},"classes/ValidateEnvVariables.html":{}}}],["25)@isoptional()@isstring()@isnotempty",{"_index":247,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["25)@issafestring",{"_index":534,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["3",{"_index":279,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["3.2.3",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["3/9",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["4.1.0",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{}}}],["4217",{"_index":306,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["5",{"_index":870,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":869,"title":{},"body":{"overview.html":{}}}],["7.4.2",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":219,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["8.13.0",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":833,"title":{},"body":{"license.html":{}}}],["account",{"_index":215,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["action",{"_index":857,"title":{},"body":{"license.html":{}}}],["add",{"_index":689,"title":{},"body":{"index.html":{}}}],["additional",{"_index":734,"title":{},"body":{"index.html":{}}}],["address",{"_index":658,"title":{},"body":{"miscellaneous/functions.html":{}}}],["aed",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":874,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":671,"title":{},"body":{"index.html":{}}}],["already",{"_index":448,"title":{},"body":{"injectables/UserService.html":{}}}],["amazing",{"_index":786,"title":{},"body":{"index.html":{}}}],["amount",{"_index":261,"title":{},"body":{"entities/Expense.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["and/or",{"_index":825,"title":{},"body":{"license.html":{}}}],["api",{"_index":664,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":252,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["apiproperty({description",{"_index":214,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({type",{"_index":237,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["apiresponse",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags(\"authentication",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":555,"title":{},"body":{"classes/ValidateEnvVariables.html":{},"index.html":{}}}],["app_port",{"_index":506,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["app_prefix",{"_index":507,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["appconfigurationmodule",{"_index":1,"title":{"modules/AppConfigurationModule.html":{}},"body":{"modules/AppConfigurationModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["application",{"_index":666,"title":{},"body":{"index.html":{}}}],["applications",{"_index":761,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":36,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arising",{"_index":860,"title":{},"body":{"license.html":{}}}],["associated",{"_index":812,"title":{},"body":{"license.html":{}}}],["async",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"classes/BcryptAlgorithmProvider.html":{},"injectables/PasswordProvider.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["asynchronously",{"_index":150,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["auth",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/auth.controller",{"_index":342,"title":{},"body":{"modules/IamModule.html":{}}}],["auth/auth.service",{"_index":341,"title":{},"body":{"modules/IamModule.html":{}}}],["authcontroller",{"_index":58,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/IamModule.html":{},"coverage.html":{}}}],["authentication",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["author",{"_index":794,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorized",{"_index":488,"title":{},"body":{"injectables/UserService.html":{}}}],["authors",{"_index":850,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":98,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/IamModule.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":864,"title":{},"body":{"modules.html":{}}}],["await",{"_index":188,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/PasswordProvider.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":787,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":457,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception(`invalid",{"_index":496,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["based",{"_index":431,"title":{},"body":{"injectables/UserService.html":{}}}],["basic",{"_index":750,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":155,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"classes/ValidateEnvVariables.html":{},"dependencies.html":{}}}],["bcrypt.compare(data",{"_index":189,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["bcrypt.gensalt(this.saltround",{"_index":193,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["bcrypt.hash(data",{"_index":194,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["bcryptalgorithm",{"_index":361,"title":{},"body":{"injectables/PasswordProvider.html":{}}}],["bcryptalgorithmprovider",{"_index":131,"title":{"classes/BcryptAlgorithmProvider.html":{}},"body":{"classes/BcryptAlgorithmProvider.html":{},"modules/PasswordModule.html":{},"injectables/PasswordProvider.html":{},"coverage.html":{}}}],["bigint",{"_index":269,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["body",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["boolean",{"_index":172,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/ExpenseModule.html":{},"modules/ExpenseTrackerModule.html":{},"modules/IamModule.html":{},"modules/PasswordModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brand",{"_index":659,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["browse",{"_index":865,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":866,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":147,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"interfaces/IHash.html":{},"injectables/PasswordProvider.html":{}}}],["buffer.isbuffer(value",{"_index":201,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["build",{"_index":663,"title":{},"body":{"index.html":{}}}],["building",{"_index":757,"title":{},"body":{"index.html":{}}}],["c",{"_index":802,"title":{},"body":{"license.html":{}}}],["cache",{"_index":26,"title":{},"body":{"modules/AppConfigurationModule.html":{}}}],["capture",{"_index":728,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":390,"title":{},"body":{"entities/User.html":{}}}],["cast",{"_index":754,"title":{},"body":{"index.html":{}}}],["catch",{"_index":190,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{}}}],["categories",{"_index":721,"title":{},"body":{"index.html":{}}}],["category",{"_index":262,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["cents",{"_index":301,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["character",{"_index":234,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters",{"_index":228,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["charge",{"_index":807,"title":{},"body":{"license.html":{}}}],["check",{"_index":198,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{}}}],["checks",{"_index":447,"title":{},"body":{"injectables/UserService.html":{}}}],["choice",{"_index":705,"title":{},"body":{"index.html":{}}}],["choosing",{"_index":699,"title":{},"body":{"index.html":{}}}],["claim",{"_index":853,"title":{},"body":{"license.html":{}}}],["class",{"_index":33,"title":{"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"classes/IdDto.html":{},"classes/PublicUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{},"classes/ValidateEnvVariables.html":{}},"body":{"modules/AppConfigurationModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"entities/Expense.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"modules/ExpenseTrackerModule.html":{},"injectables/ExpenseTrackerService.html":{},"modules/IamModule.html":{},"classes/IdDto.html":{},"modules/PasswordModule.html":{},"injectables/PasswordProvider.html":{},"classes/PublicUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["classes",{"_index":132,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"classes/IdDto.html":{},"classes/PublicUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{},"classes/ValidateEnvVariables.html":{},"overview.html":{}}}],["clothing",{"_index":640,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_expensemodule",{"_index":309,"title":{},"body":{"modules/ExpenseModule.html":{},"overview.html":{}}}],["cluster_expensemodule_exports",{"_index":310,"title":{},"body":{"modules/ExpenseModule.html":{},"overview.html":{}}}],["cluster_expensemodule_providers",{"_index":311,"title":{},"body":{"modules/ExpenseModule.html":{},"overview.html":{}}}],["cluster_expensetrackermodule",{"_index":316,"title":{},"body":{"modules/ExpenseTrackerModule.html":{},"overview.html":{}}}],["cluster_expensetrackermodule_imports",{"_index":317,"title":{},"body":{"modules/ExpenseTrackerModule.html":{},"overview.html":{}}}],["cluster_expensetrackermodule_providers",{"_index":318,"title":{},"body":{"modules/ExpenseTrackerModule.html":{},"overview.html":{}}}],["cluster_iammodule",{"_index":335,"title":{},"body":{"modules/IamModule.html":{},"overview.html":{}}}],["cluster_iammodule_imports",{"_index":336,"title":{},"body":{"modules/IamModule.html":{},"overview.html":{}}}],["cluster_iammodule_providers",{"_index":337,"title":{},"body":{"modules/IamModule.html":{},"overview.html":{}}}],["cluster_passwordmodule",{"_index":350,"title":{},"body":{"modules/PasswordModule.html":{},"overview.html":{}}}],["cluster_passwordmodule_exports",{"_index":351,"title":{},"body":{"modules/PasswordModule.html":{},"overview.html":{}}}],["cluster_passwordmodule_providers",{"_index":352,"title":{},"body":{"modules/PasswordModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":411,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":413,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":412,"title":{},"body":{"modules/UserModule.html":{}}}],["code",{"_index":304,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["column",{"_index":282,"title":{},"body":{"entities/Expense.html":{},"entities/User.html":{},"index.html":{}}}],["column({type",{"_index":268,"title":{},"body":{"entities/Expense.html":{}}}],["column({unique",{"_index":385,"title":{},"body":{"entities/User.html":{}}}],["common/decorators/is.safe.string.sec.decorator",{"_index":553,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["common/types/email/email.type",{"_index":462,"title":{},"body":{"injectables/UserService.html":{}}}],["common/types/email/email.util",{"_index":464,"title":{},"body":{"injectables/UserService.html":{}}}],["compare",{"_index":138,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"interfaces/IHash.html":{}}}],["compare(data",{"_index":146,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"interfaces/IHash.html":{}}}],["comparepassword",{"_index":357,"title":{},"body":{"injectables/PasswordProvider.html":{}}}],["comparepassword(userpassword",{"_index":362,"title":{},"body":{"injectables/PasswordProvider.html":{}}}],["compares",{"_index":151,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["comparison",{"_index":180,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["compodoc/compodoc",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":832,"title":{},"body":{"license.html":{}}}],["config/app.configuration.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":10,"title":{},"body":{"modules/AppConfigurationModule.html":{}}}],["configmodule.forroot",{"_index":21,"title":{},"body":{"modules/AppConfigurationModule.html":{}}}],["configservice",{"_index":11,"title":{},"body":{"modules/AppConfigurationModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.get(\"datasource_database",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get(\"datasource_host",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get(\"datasource_password",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get(\"datasource_port",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get(\"datasource_username",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conflictexception",{"_index":458,"title":{},"body":{"injectables/UserService.html":{}}}],["conflictexception(\"email",{"_index":471,"title":{},"body":{"injectables/UserService.html":{}}}],["connection",{"_index":861,"title":{},"body":{"license.html":{}}}],["console.error",{"_index":479,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(createuserdto",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":192,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["constraints",{"_index":256,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{}}}],["constructor",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExpenseTrackerService.html":{},"injectables/PasswordProvider.html":{},"injectables/UserService.html":{}}}],["constructor(bcryptalgorithm",{"_index":359,"title":{},"body":{"injectables/PasswordProvider.html":{}}}],["constructor(datasource",{"_index":425,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(passwordprovider",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/PasswordProvider.html":{},"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":327,"title":{},"body":{"injectables/ExpenseTrackerService.html":{}}}],["contract",{"_index":858,"title":{},"body":{"license.html":{}}}],["controller",{"_index":57,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"coverage.html":{},"overview.html":{}}}],["controller(\"auth",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/IamModule.html":{}}}],["copies",{"_index":827,"title":{},"body":{"license.html":{}}}],["copy",{"_index":810,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":801,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":572,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["create(createuserdto",{"_index":428,"title":{},"body":{"injectables/UserService.html":{}}}],["created",{"_index":433,"title":{},"body":{"injectables/UserService.html":{}}}],["createdat",{"_index":263,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["createdatecolumn",{"_index":275,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["createmoney",{"_index":581,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createmoney(amount",{"_index":649,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":430,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto",{"_index":67,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto})@post",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["creation",{"_index":469,"title":{},"body":{"injectables/UserService.html":{}}}],["currencies",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currency",{"_index":264,"title":{},"body":{"entities/Expense.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["custom",{"_index":557,"title":{},"body":{"classes/ValidateEnvVariables.html":{},"index.html":{}}}],["damages",{"_index":854,"title":{},"body":{"license.html":{}}}],["data",{"_index":153,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"interfaces/IHash.html":{},"injectables/UserService.html":{},"index.html":{}}}],["database",{"_index":706,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["datasource",{"_index":426,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["datasource(options",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.initialize",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource_database",{"_index":508,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["datasource_host",{"_index":509,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["datasource_password",{"_index":510,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["datasource_port",{"_index":511,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["datasource_username",{"_index":512,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["datasourcefactory",{"_index":15,"title":{},"body":{"modules/AppConfigurationModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":265,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["db",{"_index":554,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["db/db.config",{"_index":17,"title":{},"body":{"modules/AppConfigurationModule.html":{}}}],["deal",{"_index":814,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":862,"title":{},"body":{"license.html":{}}}],["decide",{"_index":724,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/ExpenseModule.html":{},"modules/ExpenseTrackerModule.html":{},"modules/IamModule.html":{},"modules/PasswordModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"entities/Expense.html":{},"classes/IdDto.html":{},"classes/PublicUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"classes/ValidateEnvVariables.html":{}}}],["default",{"_index":141,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"entities/Expense.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default_currency",{"_index":583,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"entities/Expense.html":{},"injectables/ExpenseTrackerService.html":{},"interfaces/IHash.html":{},"classes/IdDto.html":{},"injectables/PasswordProvider.html":{},"classes/PublicUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{}}}],["definition",{"_index":745,"title":{},"body":{"index.html":{}}}],["delete",{"_index":675,"title":{},"body":{"index.html":{}}}],["deleting",{"_index":739,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":37,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ExpenseModule.html":{},"modules/ExpenseTrackerModule.html":{},"modules/IamModule.html":{},"modules/PasswordModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"entities/Expense.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":730,"title":{},"body":{"index.html":{}}}],["development",{"_index":766,"title":{},"body":{"index.html":{}}}],["different",{"_index":720,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":823,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":573,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dto/create.user.dto",{"_index":461,"title":{},"body":{"injectables/UserService.html":{}}}],["dto/update.user.dto",{"_index":465,"title":{},"body":{"injectables/UserService.html":{}}}],["during",{"_index":179,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{}}}],["e.g",{"_index":300,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["e2e",{"_index":776,"title":{},"body":{"index.html":{}}}],["each",{"_index":410,"title":{},"body":{"classes/UserBaseDto.html":{},"index.html":{}}}],["efficient",{"_index":758,"title":{},"body":{"index.html":{}}}],["electronics",{"_index":638,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["email",{"_index":210,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PublicUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["emailpattern",{"_index":748,"title":{},"body":{"index.html":{}}}],["emailpattern.test(email",{"_index":753,"title":{},"body":{"index.html":{}}}],["empty",{"_index":186,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["enableimplicitconversion",{"_index":565,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["encrypted",{"_index":148,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"interfaces/IHash.html":{}}}],["end",{"_index":698,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":717,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":500,"title":{},"body":{"injectables/UserService.html":{}}}],["entities",{"_index":259,"title":{},"body":{"entities/Expense.html":{},"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":258,"title":{"entities/Expense.html":{},"entities/User.html":{}},"body":{"entities/Expense.html":{},"entities/User.html":{},"coverage.html":{},"index.html":{}}}],["entity(\"expenses",{"_index":295,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["entity(\"users",{"_index":397,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["entity/user.entity",{"_index":416,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entry",{"_index":731,"title":{},"body":{"index.html":{}}}],["enum",{"_index":272,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["enum/expense.category.enum",{"_index":294,"title":{},"body":{"entities/Expense.html":{}}}],["enumerations",{"_index":633,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":25,"title":{},"body":{"modules/AppConfigurationModule.html":{}}}],["env/validate.env.variables",{"_index":19,"title":{},"body":{"modules/AppConfigurationModule.html":{}}}],["envfilepath",{"_index":24,"title":{},"body":{"modules/AppConfigurationModule.html":{}}}],["environment",{"_index":560,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["environments",{"_index":570,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["envvalidation",{"_index":523,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["envvalidation(options",{"_index":546,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["error",{"_index":177,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{}}}],["error(\"datasourceoption",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.message",{"_index":481,"title":{},"body":{"injectables/UserService.html":{}}}],["errors",{"_index":566,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["errors.length",{"_index":569,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["errors.tostring",{"_index":571,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["eur",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":849,"title":{},"body":{"license.html":{}}}],["example",{"_index":216,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{}}}],["exist",{"_index":487,"title":{},"body":{"injectables/UserService.html":{}}}],["existence",{"_index":450,"title":{},"body":{"injectables/UserService.html":{}}}],["existing",{"_index":701,"title":{},"body":{"index.html":{}}}],["exists",{"_index":449,"title":{},"body":{"injectables/UserService.html":{}}}],["expense",{"_index":52,"title":{"entities/Expense.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"entities/Expense.html":{},"modules/ExpenseTrackerModule.html":{},"modules/IamModule.html":{},"classes/PublicUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"coverage.html":{},"index.html":{}}}],["expense.service",{"_index":314,"title":{},"body":{"modules/ExpenseModule.html":{}}}],["expense.user",{"_index":388,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["expensecategoryenum",{"_index":271,"title":{},"body":{"entities/Expense.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["expensecategoryenum.others",{"_index":307,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["expensemodule",{"_index":308,"title":{"modules/ExpenseModule.html":{}},"body":{"modules/ExpenseModule.html":{},"modules/ExpenseTrackerModule.html":{},"modules.html":{},"overview.html":{}}}],["expenses",{"_index":211,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PublicUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"index.html":{}}}],["expenses/entity/expense.entity",{"_index":378,"title":{},"body":{"classes/PublicUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{}}}],["expenses/expense.module",{"_index":323,"title":{},"body":{"modules/ExpenseTrackerModule.html":{}}}],["expenses/expense.service",{"_index":329,"title":{},"body":{"injectables/ExpenseTrackerService.html":{}}}],["expenseservice",{"_index":312,"title":{"injectables/ExpenseService.html":{}},"body":{"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseTrackerService.html":{},"coverage.html":{},"overview.html":{}}}],["expensetrackermodule",{"_index":45,"title":{"modules/ExpenseTrackerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExpenseTrackerModule.html":{},"modules.html":{},"overview.html":{}}}],["expensetrackerservice",{"_index":320,"title":{"injectables/ExpenseTrackerService.html":{}},"body":{"modules/ExpenseTrackerModule.html":{},"injectables/ExpenseTrackerService.html":{},"coverage.html":{},"overview.html":{}}}],["expense})@type(undefined)@validatenested({each",{"_index":241,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["export",{"_index":32,"title":{},"body":{"modules/AppConfigurationModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"entities/Expense.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"modules/ExpenseTrackerModule.html":{},"injectables/ExpenseTrackerService.html":{},"interfaces/IHash.html":{},"modules/IamModule.html":{},"classes/IdDto.html":{},"modules/PasswordModule.html":{},"injectables/PasswordProvider.html":{},"classes/PublicUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"index.html":{}}}],["exports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/ExpenseModule.html":{},"modules/ExpenseTrackerModule.html":{},"modules/IamModule.html":{},"modules/PasswordModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["expose",{"_index":372,"title":{},"body":{"classes/PublicUserDto.html":{}}}],["express",{"_index":609,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":207,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["failed",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"classes/ValidateEnvVariables.html":{}}}],["failed.'})@apiresponse({status",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{}}}],["false",{"_index":159,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"classes/ValidateEnvVariables.html":{}}}],["features",{"_index":679,"title":{},"body":{"index.html":{}}}],["feel",{"_index":722,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/AppConfigurationModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"entities/Expense.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"modules/ExpenseTrackerModule.html":{},"injectables/ExpenseTrackerService.html":{},"interfaces/IHash.html":{},"modules/IamModule.html":{},"classes/IdDto.html":{},"modules/PasswordModule.html":{},"injectables/PasswordProvider.html":{},"classes/PublicUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"coverage.html":{}}}],["files",{"_index":813,"title":{},"body":{"license.html":{}}}],["filter",{"_index":687,"title":{},"body":{"index.html":{}}}],["filtering",{"_index":737,"title":{},"body":{"index.html":{}}}],["filters",{"_index":691,"title":{},"body":{"index.html":{}}}],["finds",{"_index":441,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserbyemail",{"_index":419,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserbyemail(email",{"_index":435,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserbyid",{"_index":420,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserbyid(id",{"_index":437,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserbyidentifier",{"_index":421,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserbyidentifier(identifier",{"_index":439,"title":{},"body":{"injectables/UserService.html":{}}}],["firstname",{"_index":212,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PublicUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"index.html":{}}}],["fitness",{"_index":845,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":743,"title":{},"body":{"index.html":{}}}],["follow",{"_index":710,"title":{},"body":{"index.html":{}}}],["following",{"_index":690,"title":{},"body":{"index.html":{},"license.html":{}}}],["format",{"_index":492,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["found",{"_index":444,"title":{},"body":{"injectables/UserService.html":{}}}],["framework",{"_index":704,"title":{},"body":{"index.html":{}}}],["free",{"_index":723,"title":{},"body":{"index.html":{},"license.html":{}}}],["function",{"_index":491,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["functions",{"_index":643,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":830,"title":{},"body":{"license.html":{}}}],["gbp",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":682,"title":{},"body":{"index.html":{}}}],["generated",{"_index":165,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["generates",{"_index":163,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["getdatabaseconfig",{"_index":16,"title":{},"body":{"modules/AppConfigurationModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":661,"title":{"index.html":{},"license.html":{}},"body":{}}],["granted",{"_index":806,"title":{},"body":{"license.html":{}}}],["graph",{"_index":863,"title":{},"body":{"modules.html":{}}}],["groceries",{"_index":636,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["grow",{"_index":783,"title":{},"body":{"index.html":{}}}],["handle",{"_index":490,"title":{},"body":{"injectables/UserService.html":{}}}],["handling",{"_index":684,"title":{},"body":{"index.html":{}}}],["hash",{"_index":139,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"interfaces/IHash.html":{}}}],["hash(data",{"_index":161,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"interfaces/IHash.html":{}}}],["hash.interface",{"_index":173,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["hash/bcrypt.algorithm.provider",{"_index":355,"title":{},"body":{"modules/PasswordModule.html":{},"injectables/PasswordProvider.html":{}}}],["hashed",{"_index":169,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["hashing",{"_index":191,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["hashpassword",{"_index":358,"title":{},"body":{"injectables/PasswordProvider.html":{}}}],["hashpassword(password",{"_index":366,"title":{},"body":{"injectables/PasswordProvider.html":{}}}],["health",{"_index":641,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["here",{"_index":680,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":805,"title":{},"body":{"license.html":{}}}],["holders",{"_index":851,"title":{},"body":{"license.html":{}}}],["host",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcode",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.created",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.created)@apiresponse({status",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://roadmap.sh/projects/expense",{"_index":670,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["iam/iam.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["iammodule",{"_index":46,"title":{"modules/IamModule.html":{}},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{},"modules.html":{},"overview.html":{}}}],["id",{"_index":266,"title":{},"body":{"entities/Expense.html":{},"classes/IdDto.html":{},"classes/PublicUserDto.html":{},"entities/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["iddto",{"_index":344,"title":{"classes/IdDto.html":{}},"body":{"classes/IdDto.html":{},"coverage.html":{}}}],["identifier",{"_index":442,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["identify",{"_index":718,"title":{},"body":{"index.html":{}}}],["ifemailused",{"_index":422,"title":{},"body":{"injectables/UserService.html":{}}}],["ifemailused(email",{"_index":445,"title":{},"body":{"injectables/UserService.html":{}}}],["ihash",{"_index":135,"title":{"interfaces/IHash.html":{}},"body":{"classes/BcryptAlgorithmProvider.html":{},"interfaces/IHash.html":{},"coverage.html":{}}}],["implement",{"_index":681,"title":{},"body":{"index.html":{}}}],["implements",{"_index":134,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["implied",{"_index":841,"title":{},"body":{"license.html":{}}}],["import",{"_index":7,"title":{},"body":{"modules/AppConfigurationModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"entities/Expense.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"modules/ExpenseTrackerModule.html":{},"injectables/ExpenseTrackerService.html":{},"modules/IamModule.html":{},"classes/IdDto.html":{},"modules/PasswordModule.html":{},"injectables/PasswordProvider.html":{},"classes/PublicUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{}}}],["imports",{"_index":20,"title":{},"body":{"modules/AppConfigurationModule.html":{},"modules/AppModule.html":{},"modules/ExpenseTrackerModule.html":{},"modules/IamModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["include",{"_index":230,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["included",{"_index":836,"title":{},"body":{"license.html":{}}}],["including",{"_index":817,"title":{},"body":{"license.html":{}}}],["index",{"_index":62,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"entities/Expense.html":{},"interfaces/IHash.html":{},"classes/IdDto.html":{},"injectables/PasswordProvider.html":{},"classes/PublicUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":451,"title":{},"body":{"injectables/UserService.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/AppConfigurationModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"entities/Expense.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"modules/ExpenseTrackerModule.html":{},"injectables/ExpenseTrackerService.html":{},"interfaces/IHash.html":{},"modules/IamModule.html":{},"classes/IdDto.html":{},"modules/PasswordModule.html":{},"injectables/PasswordProvider.html":{},"classes/PublicUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{}}}],["inherited",{"_index":239,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["inject",{"_index":30,"title":{},"body":{"modules/AppConfigurationModule.html":{}}}],["injectable",{"_index":111,"title":{"injectables/AuthService.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseTrackerService.html":{},"injectables/PasswordProvider.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseTrackerService.html":{},"injectables/PasswordProvider.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseTrackerService.html":{},"injectables/PasswordProvider.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":204,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["installation",{"_index":763,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":765,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{}}}],["interact",{"_index":709,"title":{},"body":{"index.html":{}}}],["interface",{"_index":330,"title":{"interfaces/IHash.html":{}},"body":{"interfaces/IHash.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":331,"title":{},"body":{"interfaces/IHash.html":{}}}],["internal",{"_index":467,"title":{},"body":{"injectables/UserService.html":{}}}],["internalservererrorexception",{"_index":459,"title":{},"body":{"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{}}}],["internalservererrorexception(\"failed",{"_index":486,"title":{},"body":{"injectables/UserService.html":{}}}],["invalid",{"_index":493,"title":{},"body":{"injectables/UserService.html":{}}}],["isemail",{"_index":404,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["isglobal",{"_index":22,"title":{},"body":{"modules/AppConfigurationModule.html":{}}}],["isint",{"_index":348,"title":{},"body":{"classes/IdDto.html":{},"classes/ValidateEnvVariables.html":{}}}],["isint()@ispositive",{"_index":346,"title":{},"body":{"classes/IdDto.html":{}}}],["isnonemptystring",{"_index":140,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["isnonemptystring(value",{"_index":170,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["isnotempty",{"_index":405,"title":{},"body":{"classes/UserBaseDto.html":{},"classes/ValidateEnvVariables.html":{}}}],["isnotempty()@isstring",{"_index":542,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["isnotempty()@isstring()@issafestring",{"_index":526,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["isnotempty()@isstring()@length(3",{"_index":533,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["iso",{"_index":305,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["isoptional",{"_index":406,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["ispositive",{"_index":349,"title":{},"body":{"classes/IdDto.html":{},"classes/ValidateEnvVariables.html":{}}}],["ispositive()@isint",{"_index":524,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["issafestring",{"_index":552,"title":{},"body":{"classes/ValidateEnvVariables.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["issafestring()@isstrongpassword",{"_index":530,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["issafestring(validationoptions",{"_index":651,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isstring",{"_index":407,"title":{},"body":{"classes/UserBaseDto.html":{},"classes/ValidateEnvVariables.html":{}}}],["isstrongpassword",{"_index":250,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/ValidateEnvVariables.html":{}}}],["isvalidcurrency",{"_index":587,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isvalidcurrency(currency",{"_index":654,"title":{},"body":{"miscellaneous/functions.html":{}}}],["join",{"_index":789,"title":{},"body":{"index.html":{}}}],["jordach",{"_index":795,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["jordachmakaya",{"_index":798,"title":{},"body":{"index.html":{}}}],["json",{"_index":713,"title":{},"body":{"index.html":{}}}],["json.stringify(createuserdto",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":712,"title":{},"body":{"index.html":{}}}],["jwts",{"_index":683,"title":{},"body":{"index.html":{}}}],["kind",{"_index":840,"title":{},"body":{"license.html":{}}}],["language",{"_index":703,"title":{},"body":{"index.html":{}}}],["last",{"_index":694,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":213,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PublicUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"index.html":{}}}],["legend",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/ExpenseModule.html":{},"modules/ExpenseTrackerModule.html":{},"modules/IamModule.html":{},"modules/PasswordModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["leisure",{"_index":637,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["length",{"_index":278,"title":{},"body":{"entities/Expense.html":{},"classes/UserBaseDto.html":{},"classes/ValidateEnvVariables.html":{},"index.html":{}}}],["length(3",{"_index":409,"title":{},"body":{"classes/UserBaseDto.html":{},"classes/ValidateEnvVariables.html":{}}}],["letter",{"_index":303,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["liability",{"_index":855,"title":{},"body":{"license.html":{}}}],["liable",{"_index":852,"title":{},"body":{"license.html":{}}}],["library",{"_index":708,"title":{},"body":{"index.html":{}}}],["license",{"_index":800,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":781,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":818,"title":{},"body":{"license.html":{}}}],["limited",{"_index":842,"title":{},"body":{"license.html":{}}}],["link",{"_index":669,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":797,"title":{},"body":{"index.html":{}}}],["list",{"_index":686,"title":{},"body":{"index.html":{}}}],["log",{"_index":678,"title":{},"body":{"index.html":{}}}],["long",{"_index":229,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["lowercase",{"_index":232,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["made",{"_index":733,"title":{},"body":{"index.html":{}}}],["makaya",{"_index":796,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["manager/expense",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/ExpenseTrackerModule.html":{},"injectables/ExpenseTrackerService.html":{},"coverage.html":{}}}],["manager/expenses/entity/expense.entity.ts",{"_index":260,"title":{},"body":{"entities/Expense.html":{},"coverage.html":{}}}],["manager/expenses/entity/expense.entity.ts:15",{"_index":285,"title":{},"body":{"entities/Expense.html":{}}}],["manager/expenses/entity/expense.entity.ts:18",{"_index":270,"title":{},"body":{"entities/Expense.html":{}}}],["manager/expenses/entity/expense.entity.ts:20",{"_index":280,"title":{},"body":{"entities/Expense.html":{}}}],["manager/expenses/entity/expense.entity.ts:26",{"_index":274,"title":{},"body":{"entities/Expense.html":{}}}],["manager/expenses/entity/expense.entity.ts:28",{"_index":283,"title":{},"body":{"entities/Expense.html":{}}}],["manager/expenses/entity/expense.entity.ts:30",{"_index":281,"title":{},"body":{"entities/Expense.html":{}}}],["manager/expenses/entity/expense.entity.ts:32",{"_index":290,"title":{},"body":{"entities/Expense.html":{}}}],["manager/expenses/entity/expense.entity.ts:35",{"_index":276,"title":{},"body":{"entities/Expense.html":{}}}],["manager/expenses/entity/expense.entity.ts:38",{"_index":287,"title":{},"body":{"entities/Expense.html":{}}}],["manager/expenses/enum/expense.category.enum.ts",{"_index":635,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manager/expenses/expense.module.ts",{"_index":313,"title":{},"body":{"modules/ExpenseModule.html":{}}}],["manager/expenses/expense.service.ts",{"_index":315,"title":{},"body":{"injectables/ExpenseService.html":{},"coverage.html":{}}}],["manager/users/dto/create.user.dto",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["manager/users/dto/create.user.dto.ts",{"_index":206,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["manager/users/dto/create.user.dto.ts:25",{"_index":236,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["manager/users/dto/public.user.dto.ts",{"_index":371,"title":{},"body":{"classes/PublicUserDto.html":{},"coverage.html":{}}}],["manager/users/dto/public.user.dto.ts:10",{"_index":377,"title":{},"body":{"classes/PublicUserDto.html":{}}}],["manager/users/dto/public.user.dto.ts:12",{"_index":373,"title":{},"body":{"classes/PublicUserDto.html":{}}}],["manager/users/dto/public.user.dto.ts:14",{"_index":374,"title":{},"body":{"classes/PublicUserDto.html":{}}}],["manager/users/dto/public.user.dto.ts:6",{"_index":376,"title":{},"body":{"classes/PublicUserDto.html":{}}}],["manager/users/dto/public.user.dto.ts:8",{"_index":375,"title":{},"body":{"classes/PublicUserDto.html":{}}}],["manager/users/dto/update.user.dto.ts",{"_index":381,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["manager/users/dto/user.base.dto.ts",{"_index":399,"title":{},"body":{"classes/UserBaseDto.html":{},"coverage.html":{}}}],["manager/users/dto/user.base.dto.ts:18",{"_index":402,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["manager/users/dto/user.base.dto.ts:25",{"_index":403,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["manager/users/dto/user.base.dto.ts:29",{"_index":400,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["manager/users/dto/user.base.dto.ts:34",{"_index":401,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["manager/users/entity/user.entity.ts",{"_index":384,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["manager/users/entity/user.entity.ts:11",{"_index":394,"title":{},"body":{"entities/User.html":{}}}],["manager/users/entity/user.entity.ts:13",{"_index":386,"title":{},"body":{"entities/User.html":{}}}],["manager/users/entity/user.entity.ts:15",{"_index":395,"title":{},"body":{"entities/User.html":{}}}],["manager/users/entity/user.entity.ts:17",{"_index":391,"title":{},"body":{"entities/User.html":{}}}],["manager/users/entity/user.entity.ts:7",{"_index":393,"title":{},"body":{"entities/User.html":{}}}],["manager/users/entity/user.entity.ts:9",{"_index":392,"title":{},"body":{"entities/User.html":{}}}],["manager/users/user.module",{"_index":343,"title":{},"body":{"modules/IamModule.html":{}}}],["manager/users/user.module.ts",{"_index":414,"title":{},"body":{"modules/UserModule.html":{}}}],["manager/users/user.service",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{},"modules/IamModule.html":{}}}],["manager/users/user.service.ts",{"_index":418,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["manager/users/user.service.ts:106",{"_index":436,"title":{},"body":{"injectables/UserService.html":{}}}],["manager/users/user.service.ts:116",{"_index":454,"title":{},"body":{"injectables/UserService.html":{}}}],["manager/users/user.service.ts:123",{"_index":456,"title":{},"body":{"injectables/UserService.html":{}}}],["manager/users/user.service.ts:16",{"_index":427,"title":{},"body":{"injectables/UserService.html":{}}}],["manager/users/user.service.ts:27",{"_index":429,"title":{},"body":{"injectables/UserService.html":{}}}],["manager/users/user.service.ts:61",{"_index":446,"title":{},"body":{"injectables/UserService.html":{}}}],["manager/users/user.service.ts:81",{"_index":440,"title":{},"body":{"injectables/UserService.html":{}}}],["manager/users/user.service.ts:96",{"_index":438,"title":{},"body":{"injectables/UserService.html":{}}}],["manytoone",{"_index":291,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["manytoone(undefined",{"_index":288,"title":{},"body":{"entities/Expense.html":{}}}],["matches",{"_index":158,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["matching",{"_index":35,"title":{},"body":{"modules/AppConfigurationModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"entities/Expense.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"modules/ExpenseTrackerModule.html":{},"injectables/ExpenseTrackerService.html":{},"interfaces/IHash.html":{},"modules/IamModule.html":{},"classes/IdDto.html":{},"modules/PasswordModule.html":{},"injectables/PasswordProvider.html":{},"classes/PublicUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":220,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["merchantability",{"_index":844,"title":{},"body":{"license.html":{}}}],["merge",{"_index":821,"title":{},"body":{"license.html":{}}}],["message",{"_index":227,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":559,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["methods",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"interfaces/IHash.html":{},"injectables/PasswordProvider.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{}}}],["minlength",{"_index":218,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlowercase",{"_index":222,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minnumbers",{"_index":225,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minor",{"_index":298,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["minsymbols",{"_index":226,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minuppercase",{"_index":224,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":632,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":780,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mode",{"_index":769,"title":{},"body":{"index.html":{}}}],["model",{"_index":726,"title":{},"body":{"index.html":{}}}],["modify",{"_index":820,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppConfigurationModule.html":{},"modules/AppModule.html":{},"modules/ExpenseModule.html":{},"modules/ExpenseTrackerModule.html":{},"modules/IamModule.html":{},"modules/PasswordModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppConfigurationModule.html":{},"modules/AppModule.html":{},"modules/ExpenseModule.html":{},"modules/ExpenseTrackerModule.html":{},"modules/IamModule.html":{},"modules/PasswordModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppConfigurationModule.html":{},"modules/AppModule.html":{},"modules/ExpenseModule.html":{},"modules/ExpenseTrackerModule.html":{},"modules/IamModule.html":{},"modules/PasswordModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["money",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["moneytype",{"_index":650,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["month",{"_index":693,"title":{},"body":{"index.html":{}}}],["months",{"_index":695,"title":{},"body":{"index.html":{}}}],["more",{"_index":791,"title":{},"body":{"index.html":{}}}],["name",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"injectables/ExpenseTrackerService.html":{},"interfaces/IHash.html":{},"injectables/PasswordProvider.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"miscellaneous/functions.html":{}}}],["necessary",{"_index":729,"title":{},"body":{"index.html":{}}}],["nest",{"_index":779,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"modules/AppConfigurationModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"modules/ExpenseTrackerModule.html":{},"injectables/ExpenseTrackerService.html":{},"modules/IamModule.html":{},"modules/PasswordModule.html":{},"injectables/PasswordProvider.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":12,"title":{},"body":{"modules/AppConfigurationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":14,"title":{},"body":{"modules/AppConfigurationModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["new",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":432,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser",{"_index":474,"title":{},"body":{"injectables/UserService.html":{}}}],["node.js",{"_index":756,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":513,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["non",{"_index":199,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["noninfringement",{"_index":848,"title":{},"body":{"license.html":{}}}],["notes",{"_index":735,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":460,"title":{},"body":{"injectables/UserService.html":{}}}],["notice",{"_index":834,"title":{},"body":{"license.html":{}}}],["null",{"_index":453,"title":{},"body":{"injectables/UserService.html":{}}}],["number",{"_index":167,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"entities/Expense.html":{},"classes/IdDto.html":{},"classes/PublicUserDto.html":{},"entities/User.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["object",{"_index":434,"title":{},"body":{"injectables/UserService.html":{}}}],["obtaining",{"_index":809,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":480,"title":{},"body":{"injectables/UserService.html":{}}}],["occurs",{"_index":178,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{}}}],["ondelete",{"_index":389,"title":{},"body":{"entities/User.html":{}}}],["onetomany",{"_index":396,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["onetomany(undefined",{"_index":387,"title":{},"body":{"entities/User.html":{}}}],["open",{"_index":782,"title":{},"body":{"index.html":{}}}],["optional",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"injectables/ExpenseTrackerService.html":{},"interfaces/IHash.html":{},"injectables/PasswordProvider.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":549,"title":{},"body":{"classes/ValidateEnvVariables.html":{},"miscellaneous/variables.html":{}}}],["organize",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["orm",{"_index":707,"title":{},"body":{"index.html":{}}}],["others",{"_index":642,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["otherwise",{"_index":160,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"license.html":{}}}],["out",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/ExpenseModule.html":{},"modules/ExpenseTrackerModule.html":{},"modules/IamModule.html":{},"modules/PasswordModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":868,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":602,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":175,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"injectables/ExpenseTrackerService.html":{},"interfaces/IHash.html":{},"injectables/PasswordProvider.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"miscellaneous/functions.html":{}}}],["parseint(process.env.salt_round",{"_index":143,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["part",{"_index":725,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":383,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(userbasedto",{"_index":382,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["particular",{"_index":846,"title":{},"body":{"license.html":{}}}],["password",{"_index":209,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/PasswordProvider.html":{},"entities/User.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["password.provider",{"_index":354,"title":{},"body":{"modules/PasswordModule.html":{}}}],["password/password.module",{"_index":340,"title":{},"body":{"modules/IamModule.html":{}}}],["password/password.provider",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{}}}],["password@@201",{"_index":235,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["passwordmodule",{"_index":338,"title":{"modules/PasswordModule.html":{}},"body":{"modules/IamModule.html":{},"modules/PasswordModule.html":{},"modules.html":{},"overview.html":{}}}],["passwordprovider",{"_index":117,"title":{"injectables/PasswordProvider.html":{}},"body":{"injectables/AuthService.html":{},"modules/PasswordModule.html":{},"injectables/PasswordProvider.html":{},"coverage.html":{},"overview.html":{}}}],["past",{"_index":688,"title":{},"body":{"index.html":{}}}],["pattern",{"_index":752,"title":{},"body":{"index.html":{}}}],["per",{"_index":253,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["permission",{"_index":804,"title":{},"body":{"license.html":{}}}],["permit",{"_index":828,"title":{},"body":{"license.html":{}}}],["person",{"_index":808,"title":{},"body":{"license.html":{}}}],["persons",{"_index":829,"title":{},"body":{"license.html":{}}}],["pg",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["plaintoinstance",{"_index":551,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["plaintoinstance(validateenvvariables",{"_index":564,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["please",{"_index":790,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["port",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":838,"title":{},"body":{"license.html":{}}}],["post",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{}}}],["prettier",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["primarygeneratedcolumn",{"_index":284,"title":{},"body":{"entities/Expense.html":{},"entities/User.html":{},"index.html":{}}}],["private",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"injectables/ExpenseTrackerService.html":{},"injectables/UserService.html":{}}}],["process",{"_index":181,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{}}}],["production",{"_index":771,"title":{},"body":{"index.html":{}}}],["programming",{"_index":702,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":755,"title":{},"body":{"index.html":{}}}],["project",{"_index":668,"title":{},"body":{"index.html":{}}}],["promise",{"_index":156,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"interfaces/IHash.html":{},"injectables/PasswordProvider.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":136,"title":{"properties.html":{}},"body":{"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"entities/Expense.html":{},"classes/IdDto.html":{},"classes/PublicUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"classes/ValidateEnvVariables.html":{},"properties.html":{}}}],["protect",{"_index":716,"title":{},"body":{"index.html":{}}}],["provided",{"_index":152,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/ExpenseModule.html":{},"modules/ExpenseTrackerModule.html":{},"modules/IamModule.html":{},"modules/PasswordModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":562,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["publicuserdto",{"_index":370,"title":{"classes/PublicUserDto.html":{}},"body":{"classes/PublicUserDto.html":{},"coverage.html":{}}}],["publish",{"_index":822,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":847,"title":{},"body":{"license.html":{}}}],["read",{"_index":673,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"injectables/ExpenseTrackerService.html":{},"injectables/PasswordProvider.html":{},"classes/PublicUserDto.html":{},"classes/UserBaseDto.html":{},"injectables/UserService.html":{},"index.html":{}}}],["record",{"_index":547,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["records",{"_index":740,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["regex",{"_index":751,"title":{},"body":{"index.html":{}}}],["registered",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["registered.'})@apibody({description",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["registration",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{}}}],["registration(createuserdto",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":700,"title":{},"body":{"index.html":{}}}],["represent",{"_index":742,"title":{},"body":{"index.html":{}}}],["requester",{"_index":719,"title":{},"body":{"index.html":{}}}],["reset",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/ExpenseModule.html":{},"modules/ExpenseTrackerModule.html":{},"modules/IamModule.html":{},"modules/PasswordModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolves",{"_index":157,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{}}}],["response",{"_index":484,"title":{},"body":{"injectables/UserService.html":{}}}],["restriction",{"_index":816,"title":{},"body":{"license.html":{}}}],["resulthelper",{"_index":423,"title":{},"body":{"injectables/UserService.html":{}}}],["resulthelper(user",{"_index":452,"title":{},"body":{"injectables/UserService.html":{}}}],["results",{"_index":34,"title":{},"body":{"modules/AppConfigurationModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"entities/Expense.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"modules/ExpenseTrackerModule.html":{},"injectables/ExpenseTrackerService.html":{},"interfaces/IHash.html":{},"modules/IamModule.html":{},"classes/IdDto.html":{},"modules/PasswordModule.html":{},"injectables/PasswordProvider.html":{},"classes/PublicUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"injectables/PasswordProvider.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"interfaces/IHash.html":{},"injectables/PasswordProvider.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":819,"title":{},"body":{"license.html":{}}}],["roadmap.sh",{"_index":667,"title":{},"body":{"index.html":{}}}],["rounds",{"_index":168,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["rules",{"_index":254,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["run",{"_index":767,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["s@]+@[^\\s@]+\\.[^\\s",{"_index":749,"title":{},"body":{"index.html":{}}}],["salt",{"_index":164,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["salt_round",{"_index":514,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["saltround",{"_index":137,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["same",{"_index":466,"title":{},"body":{"injectables/UserService.html":{}}}],["scalable",{"_index":759,"title":{},"body":{"index.html":{}}}],["search",{"_index":443,"title":{},"body":{"injectables/UserService.html":{}}}],["sell",{"_index":826,"title":{},"body":{"license.html":{}}}],["server",{"_index":468,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["service",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["session",{"_index":685,"title":{},"body":{"index.html":{}}}],["set",{"_index":255,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{}}}],["shall",{"_index":835,"title":{},"body":{"license.html":{}}}],["side",{"_index":760,"title":{},"body":{"index.html":{}}}],["sign",{"_index":676,"title":{},"body":{"index.html":{}}}],["signup",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(@body",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(createuserdto",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{}}}],["skipmissingproperties",{"_index":568,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["software",{"_index":811,"title":{},"body":{"license.html":{}}}],["solution",{"_index":727,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/AppConfigurationModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"entities/Expense.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"modules/ExpenseTrackerModule.html":{},"injectables/ExpenseTrackerService.html":{},"interfaces/IHash.html":{},"modules/IamModule.html":{},"classes/IdDto.html":{},"modules/PasswordModule.html":{},"injectables/PasswordProvider.html":{},"classes/PublicUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"index.html":{}}}],["special",{"_index":233,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["specified",{"_index":166,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["specify",{"_index":696,"title":{},"body":{"index.html":{}}}],["sponsors",{"_index":785,"title":{},"body":{"index.html":{}}}],["src/.../db.config.ts",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../email.type.ts",{"_index":875,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../email.util.ts",{"_index":648,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../expense.category.enum.ts",{"_index":634,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../is.safe.string.sec.decorator.ts",{"_index":646,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":644,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../money.type.ts",{"_index":645,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../valid.currencies.const.ts",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../validate.money.util.ts",{"_index":647,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/decorators/is.safe.string.sec.decorator.ts",{"_index":575,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/dto/id.dto.ts",{"_index":345,"title":{},"body":{"classes/IdDto.html":{},"coverage.html":{}}}],["src/common/dto/id.dto.ts:6",{"_index":347,"title":{},"body":{"classes/IdDto.html":{}}}],["src/common/types/email.type.ts",{"_index":746,"title":{},"body":{"index.html":{}}}],["src/common/types/email/email.type.ts",{"_index":876,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/common/types/email/email.util.ts",{"_index":578,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/types/money/money.type.ts",{"_index":580,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/common/types/money/valid.currencies.const.ts",{"_index":584,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/types/money/validate.money.util.ts",{"_index":586,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/util/email.util.ts",{"_index":747,"title":{},"body":{"index.html":{}}}],["src/config/app.configuration.module.ts",{"_index":6,"title":{},"body":{"modules/AppConfigurationModule.html":{}}}],["src/config/db/db.config.ts",{"_index":589,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/env/validate.env.variables.ts",{"_index":505,"title":{},"body":{"classes/ValidateEnvVariables.html":{},"coverage.html":{}}}],["src/config/env/validate.env.variables.ts:20",{"_index":535,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["src/config/env/validate.env.variables.ts:24",{"_index":531,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["src/config/env/validate.env.variables.ts:28",{"_index":528,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["src/config/env/validate.env.variables.ts:32",{"_index":529,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["src/config/env/validate.env.variables.ts:35",{"_index":532,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["src/config/env/validate.env.variables.ts:40",{"_index":537,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["src/config/env/validate.env.variables.ts:44",{"_index":525,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["src/config/env/validate.env.variables.ts:48",{"_index":527,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["src/config/env/validate.env.variables.ts:52",{"_index":536,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["src/config/env/validate.env.variables.ts:57",{"_index":541,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["src/config/env/validate.env.variables.ts:61",{"_index":538,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["src/config/env/validate.env.variables.ts:65",{"_index":544,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["src/config/env/validate.env.variables.ts:69",{"_index":539,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["src/config/env/validate.env.variables.ts:73",{"_index":540,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["src/config/env/validate.env.variables.ts:76",{"_index":543,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["src/config/env/validate.env.variables.ts:80",{"_index":545,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["src/config/env/validate.env.variables.ts:83",{"_index":548,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["src/expense",{"_index":205,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/Expense.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"modules/ExpenseTrackerModule.html":{},"injectables/ExpenseTrackerService.html":{},"classes/PublicUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/iam/auth/auth.controller.ts",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/iam/auth/auth.controller.ts:25",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/iam/auth/auth.service.ts",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/iam/auth/auth.service.ts:12",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/iam/auth/auth.service.ts:7",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/iam/iam.module.ts",{"_index":339,"title":{},"body":{"modules/IamModule.html":{}}}],["src/iam/password/hash/bcrypt.algorithm.provider.ts",{"_index":133,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"coverage.html":{}}}],["src/iam/password/hash/bcrypt.algorithm.provider.ts:15",{"_index":149,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["src/iam/password/hash/bcrypt.algorithm.provider.ts:33",{"_index":162,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["src/iam/password/hash/bcrypt.algorithm.provider.ts:45",{"_index":171,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["src/iam/password/hash/bcrypt.algorithm.provider.ts:5",{"_index":145,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["src/iam/password/hash/hash.interface.ts",{"_index":332,"title":{},"body":{"interfaces/IHash.html":{},"coverage.html":{}}}],["src/iam/password/hash/hash.interface.ts:2",{"_index":334,"title":{},"body":{"interfaces/IHash.html":{}}}],["src/iam/password/hash/hash.interface.ts:3",{"_index":333,"title":{},"body":{"interfaces/IHash.html":{}}}],["src/iam/password/password.module.ts",{"_index":353,"title":{},"body":{"modules/PasswordModule.html":{}}}],["src/iam/password/password.provider.ts",{"_index":356,"title":{},"body":{"injectables/PasswordProvider.html":{},"coverage.html":{}}}],["src/iam/password/password.provider.ts:12",{"_index":364,"title":{},"body":{"injectables/PasswordProvider.html":{}}}],["src/iam/password/password.provider.ts:5",{"_index":360,"title":{},"body":{"injectables/PasswordProvider.html":{}}}],["src/iam/password/password.provider.ts:8",{"_index":367,"title":{},"body":{"injectables/PasswordProvider.html":{}}}],["src/main.ts",{"_index":599,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src=\"https://img.shields.io/twitter/follow/nestframework.svg?style=social&label=follow",{"_index":762,"title":{},"body":{"index.html":{}}}],["start",{"_index":697,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":770,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":772,"title":{},"body":{"index.html":{}}}],["started",{"_index":662,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":522,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["status",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["stay",{"_index":792,"title":{},"body":{"index.html":{}}}],["store",{"_index":302,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["stored",{"_index":297,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["storedpassword",{"_index":363,"title":{},"body":{"injectables/PasswordProvider.html":{}}}],["string",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"entities/Expense.html":{},"interfaces/IHash.html":{},"injectables/PasswordProvider.html":{},"classes/PublicUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["string})@isemail()@isnotempty",{"_index":238,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["string})@isstring()@isnotempty()@length(3",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["string})@length(3",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["strongpassw0rd",{"_index":217,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["subject",{"_index":831,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":824,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":837,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["such",{"_index":732,"title":{},"body":{"index.html":{}}}],["support",{"_index":736,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supported",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svg",{"_index":867,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":556,"title":{},"body":{"classes/ValidateEnvVariables.html":{},"dependencies.html":{}}}],["swagger_desc",{"_index":515,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["swagger_licence",{"_index":516,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["swagger_licence_url",{"_index":517,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["swagger_path",{"_index":518,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["swagger_serv",{"_index":519,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["swagger_title",{"_index":520,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["swagger_version",{"_index":521,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["symbol",{"_index":660,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["synchronize",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":775,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":778,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":777,"title":{},"body":{"index.html":{}}}],["tests",{"_index":774,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":784,"title":{},"body":{"index.html":{}}}],["this.authservice.registration(createuserdto",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.bcryptalgorithm.compare(userpassword",{"_index":369,"title":{},"body":{"injectables/PasswordProvider.html":{}}}],["this.bcryptalgorithm.hash(password",{"_index":368,"title":{},"body":{"injectables/PasswordProvider.html":{}}}],["this.datasource.transaction",{"_index":472,"title":{},"body":{"injectables/UserService.html":{}}}],["this.datasource.transaction(async",{"_index":482,"title":{},"body":{"injectables/UserService.html":{}}}],["this.finduserbyemail(identifier",{"_index":495,"title":{},"body":{"injectables/UserService.html":{}}}],["this.finduserbyid(identifier",{"_index":489,"title":{},"body":{"injectables/UserService.html":{}}}],["this.ifemailused(createuserdto.email",{"_index":470,"title":{},"body":{"injectables/UserService.html":{}}}],["this.isnonemptystring(data",{"_index":182,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["this.isnonemptystring(encrypted",{"_index":183,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["this.resulthelper(newuser",{"_index":477,"title":{},"body":{"injectables/UserService.html":{}}}],["this.resulthelper(updateduser",{"_index":503,"title":{},"body":{"injectables/UserService.html":{}}}],["this.resulthelper(user",{"_index":499,"title":{},"body":{"injectables/UserService.html":{}}}],["throw",{"_index":184,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["throws",{"_index":176,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{}}}],["token",{"_index":715,"title":{},"body":{"index.html":{}}}],["tort",{"_index":859,"title":{},"body":{"license.html":{}}}],["touch",{"_index":793,"title":{},"body":{"index.html":{}}}],["tracker",{"_index":665,"title":{},"body":{"index.html":{}}}],["tracker.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["tracker.module.ts",{"_index":321,"title":{},"body":{"modules/ExpenseTrackerModule.html":{}}}],["tracker.service",{"_index":324,"title":{},"body":{"modules/ExpenseTrackerModule.html":{}}}],["tracker.service.ts",{"_index":326,"title":{},"body":{"injectables/ExpenseTrackerService.html":{},"coverage.html":{}}}],["tracker.service.ts:6",{"_index":328,"title":{},"body":{"injectables/ExpenseTrackerService.html":{}}}],["transactionentitymanager",{"_index":473,"title":{},"body":{"injectables/UserService.html":{}}}],["transactionentitymanager.create",{"_index":475,"title":{},"body":{"injectables/UserService.html":{}}}],["transactionentitymanager.save(validuser",{"_index":478,"title":{},"body":{"injectables/UserService.html":{}}}],["transformer",{"_index":379,"title":{},"body":{"classes/PublicUserDto.html":{},"classes/UserBaseDto.html":{},"classes/ValidateEnvVariables.html":{},"dependencies.html":{}}}],["trimmed",{"_index":200,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["true",{"_index":23,"title":{},"body":{"modules/AppConfigurationModule.html":{},"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"classes/ValidateEnvVariables.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":187,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{}}}],["type",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BcryptAlgorithmProvider.html":{},"classes/CreateUserDto.html":{},"entities/Expense.html":{},"injectables/ExpenseTrackerService.html":{},"interfaces/IHash.html":{},"classes/IdDto.html":{},"injectables/PasswordProvider.html":{},"classes/PublicUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"injectables/UserService.html":{},"classes/ValidateEnvVariables.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":873,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":195,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{}}}],["typeorm",{"_index":292,"title":{},"body":{"entities/Expense.html":{},"entities/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":13,"title":{},"body":{"modules/AppConfigurationModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":417,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":29,"title":{},"body":{"modules/AppConfigurationModule.html":{}}}],["types",{"_index":744,"title":{},"body":{"index.html":{}}}],["types/money",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":174,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{}}}],["unauthorizedexception(\"data",{"_index":185,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["undefined",{"_index":273,"title":{},"body":{"entities/Expense.html":{}}}],["unique",{"_index":398,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["unit",{"_index":773,"title":{},"body":{"index.html":{}}}],["units",{"_index":299,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["unknown",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["up",{"_index":677,"title":{},"body":{"index.html":{}}}],["update",{"_index":674,"title":{},"body":{"index.html":{}}}],["updatedat",{"_index":267,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["updatedatecolumn",{"_index":286,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["updateduser",{"_index":501,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser",{"_index":424,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(identifier",{"_index":455,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto",{"_index":380,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updating",{"_index":738,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":231,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["usd",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":296,"title":{},"body":{"entities/Expense.html":{},"injectables/UserService.html":{},"index.html":{},"license.html":{}}}],["usefactory",{"_index":31,"title":{},"body":{"modules/AppConfigurationModule.html":{}}}],["user",{"_index":75,"title":{"entities/User.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"entities/Expense.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user.base.dto",{"_index":249,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.expenses",{"_index":289,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["user.service",{"_index":415,"title":{},"body":{"modules/UserModule.html":{}}}],["userbasedto",{"_index":208,"title":{"classes/UserBaseDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{},"coverage.html":{}}}],["userbasedto:18",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["userbasedto:25",{"_index":248,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["userbasedto:29",{"_index":240,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["userbasedto:34",{"_index":242,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["usermodule",{"_index":319,"title":{"modules/UserModule.html":{}},"body":{"modules/ExpenseTrackerModule.html":{},"modules/IamModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userpassword",{"_index":365,"title":{},"body":{"injectables/PasswordProvider.html":{}}}],["users",{"_index":672,"title":{},"body":{"index.html":{}}}],["users/entity/user.entity",{"_index":293,"title":{},"body":{"entities/Expense.html":{}}}],["users/user.module",{"_index":322,"title":{},"body":{"modules/ExpenseTrackerModule.html":{}}}],["users/user.service",{"_index":325,"title":{},"body":{"modules/ExpenseTrackerModule.html":{},"injectables/ExpenseTrackerService.html":{}}}],["userservice",{"_index":118,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"modules/ExpenseTrackerModule.html":{},"injectables/ExpenseTrackerService.html":{},"modules/IamModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usertransaction",{"_index":483,"title":{},"body":{"injectables/UserService.html":{}}}],["usertransaction.count(user",{"_index":485,"title":{},"body":{"injectables/UserService.html":{}}}],["usetransaction",{"_index":497,"title":{},"body":{"injectables/UserService.html":{}}}],["usetransaction.findoneby(user",{"_index":498,"title":{},"body":{"injectables/UserService.html":{}}}],["usetransaction.preload(user",{"_index":502,"title":{},"body":{"injectables/UserService.html":{}}}],["usetransaction.save(validuser",{"_index":504,"title":{},"body":{"injectables/UserService.html":{}}}],["using",{"_index":154,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{},"index.html":{}}}],["utilities",{"_index":639,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["valid",{"_index":203,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"injectables/UserService.html":{}}}],["validate",{"_index":27,"title":{},"body":{"modules/AppConfigurationModule.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["validated",{"_index":563,"title":{},"body":{"classes/ValidateEnvVariables.html":{},"miscellaneous/functions.html":{}}}],["validateemail",{"_index":463,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validateemail(email",{"_index":656,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["validateemail(identifier",{"_index":494,"title":{},"body":{"injectables/UserService.html":{}}}],["validateenvvariables",{"_index":18,"title":{"classes/ValidateEnvVariables.html":{}},"body":{"modules/AppConfigurationModule.html":{},"classes/ValidateEnvVariables.html":{},"coverage.html":{}}}],["validateenvvariables.envvalidation",{"_index":28,"title":{},"body":{"modules/AppConfigurationModule.html":{}}}],["validatemoney",{"_index":588,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["validatemoney(amount",{"_index":655,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validatenested",{"_index":408,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["validates",{"_index":657,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validatesync",{"_index":550,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["validatesync(validated",{"_index":567,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["validation",{"_index":558,"title":{},"body":{"classes/ValidateEnvVariables.html":{}}}],["validationoptions",{"_index":652,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":251,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/IdDto.html":{},"classes/UserBaseDto.html":{},"classes/ValidateEnvVariables.html":{},"dependencies.html":{}}}],["validcurrenciesconst",{"_index":585,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validuser",{"_index":476,"title":{},"body":{"injectables/UserService.html":{}}}],["value",{"_index":142,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":202,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["value.trim().length",{"_index":196,"title":{},"body":{"classes/BcryptAlgorithmProvider.html":{}}}],["varchar",{"_index":277,"title":{},"body":{"entities/Expense.html":{},"index.html":{}}}],["variable",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":561,"title":{"miscellaneous/variables.html":{}},"body":{"classes/ValidateEnvVariables.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":871,"title":{},"body":{"properties.html":{}}}],["wakatime",{"_index":799,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":843,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":839,"title":{},"body":{"license.html":{}}}],["watch",{"_index":768,"title":{},"body":{"index.html":{}}}],["web",{"_index":714,"title":{},"body":{"index.html":{}}}],["week",{"_index":692,"title":{},"body":{"index.html":{}}}],["whether",{"_index":856,"title":{},"body":{"license.html":{}}}],["without",{"_index":815,"title":{},"body":{"license.html":{}}}],["works",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{}}}],["yarn",{"_index":764,"title":{},"body":{"index.html":{}}}],["yes",{"_index":653,"title":{},"body":{"miscellaneous/functions.html":{}}}],["you'd",{"_index":788,"title":{},"body":{"index.html":{}}}],["you’ll",{"_index":711,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/ExpenseModule.html":{},"modules/ExpenseTrackerModule.html":{},"modules/IamModule.html":{},"modules/PasswordModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppConfigurationModule.html":{"url":"modules/AppConfigurationModule.html","title":"module - AppConfigurationModule","body":"\n                   \n\n\n\n\n    Modules\n    AppConfigurationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/app.configuration.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\n\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { dataSourceFactory, getDatabaseConfig } from \"./db/db.config\";\nimport { ValidateEnvVariables } from \"./env/validate.env.variables\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: \".env\",\n      cache: true,\n      validate: ValidateEnvVariables.EnvValidation,\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: getDatabaseConfig,\n      dataSourceFactory: dataSourceFactory,\n    }),\n  ],\n})\nexport class AppConfigurationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppConfigurationModule\n\nAppConfigurationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppConfigurationModule->AppModule\n\n\n\n\n\nExpenseTrackerModule\n\nExpenseTrackerModule\n\nAppModule -->\n\nExpenseTrackerModule->AppModule\n\n\n\n\n\nIamModule\n\nIamModule\n\nAppModule -->\n\nIamModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppConfigurationModule\n                        \n                        \n                            ExpenseTrackerModule\n                        \n                        \n                            IamModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { AppConfigurationModule } from \"./config/app.configuration.module\";\nimport { ExpenseTrackerModule } from \"./expense-manager/expense-tracker.module\";\nimport { IamModule } from \"./iam/iam.module\";\n\n@Module({\n  imports: [AppConfigurationModule, ExpenseTrackerModule, IamModule],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iam/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.CREATED)@ApiResponse({status: 401, description: 'Authentication failed.'})@ApiResponse({status: 201, description: 'User successfully registered.'})@ApiBody({description: 'Create new user', type: CreateUserDto})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/iam/auth/auth.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post } from \"@nestjs/common\";\nimport { CreateUserDto } from \"../../expense-manager/users/dto/create.user.dto\";\nimport { ApiBody, ApiResponse, ApiTags } from \"@nestjs/swagger\";\nimport { AuthService } from \"./auth.service\";\n\n@ApiTags(\"Authentication\")\n@Controller(\"auth\")\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @HttpCode(HttpStatus.CREATED)\n  @ApiResponse({\n    status: 401,\n    description: \"Authentication failed.\",\n  })\n  @ApiResponse({\n    status: 201,\n    description: \"User successfully registered.\",\n  })\n  @ApiBody({\n    description: \"Create new user\",\n    type: CreateUserDto,\n  })\n  @Post()\n  async signUp(@Body() createUserDto: CreateUserDto) {\n    return this.authService.registration(createUserDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iam/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(passwordProvider: PasswordProvider, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/iam/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        passwordProvider\n                                                  \n                                                        \n                                                                        PasswordProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        registration\n                        \n                    \n                \n            \n            \n                \nregistration(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/iam/auth/auth.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { CreateUserDto } from \"../../expense-manager/users/dto/create.user.dto\";\nimport { PasswordProvider } from \"../password/password.provider\";\nimport { UserService } from \"../../expense-manager/users/user.service\";\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly passwordProvider: PasswordProvider,\n    private readonly userService: UserService\n  ) {}\n  registration(createUserDto: CreateUserDto) {\n    console.log(createUserDto instanceof CreateUserDto);\n    return `this service works and create ${JSON.stringify(createUserDto)}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BcryptAlgorithmProvider.html":{"url":"classes/BcryptAlgorithmProvider.html","title":"class - BcryptAlgorithmProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BcryptAlgorithmProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iam/password/hash/bcrypt.algorithm.provider.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IHash\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                saltRound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compare\n                            \n                            \n                                    Async\n                                hash\n                            \n                            \n                                    Private\n                                isNonEmptyString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        saltRound\n                        \n                    \n                \n            \n                \n                    \n                        Default value : parseInt(process.env.SALT_ROUND) || 12\n                    \n                \n                    \n                        \n                                Defined in src/iam/password/hash/bcrypt.algorithm.provider.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        compare\n                        \n                    \n                \n            \n            \n                \n                        \n                    compare(data: string | Buffer, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/iam/password/hash/bcrypt.algorithm.provider.ts:15\n                        \n                    \n\n\n            \n                \n                        Asynchronously compares the provided data with the encrypted string using bcrypt.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to compare, can be a string or a Buffer.\n\n\n                                            \n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe encrypted string to compare the data with.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to true if the data matches the encrypted string, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hash\n                        \n                    \n                \n            \n            \n                \n                        \n                    hash(data: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/iam/password/hash/bcrypt.algorithm.provider.ts:33\n                        \n                    \n\n\n            \n                \n                        Asynchronously generates a bcrypt hash for the provided data using a salt generated with the specified number of rounds.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to be hashed, can be a string or a Buffer.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to the generated bcrypt hash as a string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isNonEmptyString\n                        \n                    \n                \n            \n            \n                \n                        \n                    isNonEmptyString(value: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/iam/password/hash/bcrypt.algorithm.provider.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IHash } from \"./hash.interface\";\nimport * as bcrypt from \"bcrypt\";\nimport { UnauthorizedException } from \"@nestjs/common\";\nexport class BcryptAlgorithmProvider implements IHash {\n  private readonly saltRound = parseInt(process.env.SALT_ROUND) || 12;\n\n  /**\n   * Asynchronously compares the provided data with the encrypted string using bcrypt.\n   *\n   * @param data - The data to compare, can be a string or a Buffer.\n   * @param encrypted - The encrypted string to compare the data with.\n   * @returns A Promise that resolves to true if the data matches the encrypted string, false otherwise.\n   * @throws UnauthorizedException if an error occurs during the comparison process.\n   */\n  async compare(data: string | Buffer, encrypted: string): Promise {\n    if (!this.isNonEmptyString(data) || !this.isNonEmptyString(encrypted)) {\n      throw new UnauthorizedException(\"Data or encrypted string is empty.\");\n    }\n    try {\n      return await bcrypt.compare(data, encrypted);\n    } catch (error) {\n      throw new UnauthorizedException();\n    }\n  }\n\n  /**\n   * Asynchronously generates a bcrypt hash for the provided data using a salt generated with the specified number of rounds.\n   *\n   * @param data - The data to be hashed, can be a string or a Buffer.\n   * @returns A Promise that resolves to the generated bcrypt hash as a string.\n   * @throws UnauthorizedException if an error occurs during the hashing process.\n   */\n  async hash(data: string | Buffer): Promise {\n    if (!this.isNonEmptyString(data)) {\n      throw new UnauthorizedException(\"Data for hashing is empty.\");\n    }\n    try {\n      const salt = await bcrypt.genSalt(this.saltRound);\n      return await bcrypt.hash(data, salt);\n    } catch (error) {\n      throw new UnauthorizedException();\n    }\n  }\n\n  private isNonEmptyString(value: string | Buffer): boolean {\n    if (typeof value === \"string\") {\n      return value.trim().length > 0; // Check for non-empty trimmed string\n    } else if (Buffer.isBuffer(value)) {\n      return value.length > 0; // Check for non-empty Buffer\n    }\n    return false; // Not a valid input\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expense-manager/users/dto/create.user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            UserBaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                expenses\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The password for the user account', example: 'StrongPassw0rd!', minLength: 8, maxLength: 100})@IsStrongPassword({minLength: 8, minLowercase: 1, minUppercase: 1, minNumbers: 1, minSymbols: 1}, {message: 'Password must be at least 8 characters long and include uppercase, lowercase, number, and special character. Example: PassWord@@201'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/users/dto/create.user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        expenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Expense[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Expense})@Type(undefined)@ValidateNested({each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})@IsString()@IsNotEmpty()@Length(3, 25)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})@Length(3, 25)@IsOptional()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:25\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserBaseDto } from \"./user.base.dto\";\nimport { IsStrongPassword } from \"class-validator\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateUserDto extends UserBaseDto {\n  @ApiProperty({\n    description: \"The password for the user account\",\n    example: \"StrongPassw0rd!\",\n    minLength: 8, // As per the rules of IsStrongPassword, you can set constraints like this\n    maxLength: 100,\n  })\n  @IsStrongPassword(\n    {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minNumbers: 1,\n      minSymbols: 1,\n    },\n    {\n      message:\n        \"Password must be at least 8 characters long and include uppercase, lowercase, number, and special character. Example: PassWord@@201\",\n    }\n  )\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Expense.html":{"url":"entities/Expense.html","title":"entity - Expense","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Expense\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expense-manager/expenses/entity/expense.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                currency\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/expenses/entity/expense.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExpenseCategoryEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: ExpenseCategoryEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/expenses/entity/expense.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/expenses/entity/expense.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/expenses/entity/expense.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/expenses/entity/expense.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/expenses/entity/expense.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/expenses/entity/expense.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/expenses/entity/expense.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.expenses)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/expenses/entity/expense.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { User } from \"../../users/entity/user.entity\";\nimport { ExpenseCategoryEnum } from \"../enum/expense.category.enum\";\n\n@Entity(\"expenses\")\nexport class Expense {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: \"bigint\" }) // Use bigint for amount stored in minor units (e.g., cents)\n  amount: number;\n  @Column({ type: \"varchar\", length: 3 }) // Store currency as a 3-letter code (ISO 4217)\n  currency: string;\n  @Column({\n    type: \"enum\",\n    enum: ExpenseCategoryEnum,\n    default: ExpenseCategoryEnum.OTHERS,\n  })\n  category: ExpenseCategoryEnum;\n  @Column()\n  description: string;\n  @Column({ type: Date })\n  date: Date;\n  @ManyToOne(() => User, (user) => user.expenses)\n  user: User;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExpenseModule.html":{"url":"modules/ExpenseModule.html","title":"module - ExpenseModule","body":"\n                   \n\n\n\n\n    Modules\n    ExpenseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExpenseModule\n\n\n\ncluster_ExpenseModule_exports\n\n\n\ncluster_ExpenseModule_providers\n\n\n\n\nExpenseService \n\nExpenseService \n\n\n\nExpenseModule\n\nExpenseModule\n\nExpenseService  -->\n\nExpenseModule->ExpenseService \n\n\n\n\n\nExpenseService\n\nExpenseService\n\nExpenseModule -->\n\nExpenseService->ExpenseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/expense-manager/expenses/expense.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExpenseService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExpenseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ExpenseService } from \"./expense.service\";\n\n@Module({\n  providers: [ExpenseService],\n  exports: [ExpenseService],\n})\nexport class ExpenseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExpenseService.html":{"url":"injectables/ExpenseService.html","title":"injectable - ExpenseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExpenseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expense-manager/expenses/expense.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class ExpenseService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExpenseTrackerModule.html":{"url":"modules/ExpenseTrackerModule.html","title":"module - ExpenseTrackerModule","body":"\n                   \n\n\n\n\n    Modules\n    ExpenseTrackerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExpenseTrackerModule\n\n\n\ncluster_ExpenseTrackerModule_imports\n\n\n\ncluster_ExpenseTrackerModule_providers\n\n\n\n\nExpenseModule\n\nExpenseModule\n\n\n\nExpenseTrackerModule\n\nExpenseTrackerModule\n\nExpenseTrackerModule -->\n\nExpenseModule->ExpenseTrackerModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nExpenseTrackerModule -->\n\nUserModule->ExpenseTrackerModule\n\n\n\n\n\nExpenseTrackerService\n\nExpenseTrackerService\n\nExpenseTrackerModule -->\n\nExpenseTrackerService->ExpenseTrackerModule\n\n\n\n\n\nUserService\n\nUserService\n\nExpenseTrackerModule -->\n\nUserService->ExpenseTrackerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/expense-manager/expense-tracker.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExpenseTrackerService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ExpenseModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { UserModule } from \"./users/user.module\";\nimport { ExpenseModule } from \"./expenses/expense.module\";\n\nimport { ExpenseTrackerService } from \"./expense-tracker.service\";\n\nimport { UserService } from \"./users/user.service\";\n\n@Module({\n  imports: [UserModule, ExpenseModule],\n  providers: [ExpenseTrackerService, UserService],\n})\nexport class ExpenseTrackerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExpenseTrackerService.html":{"url":"injectables/ExpenseTrackerService.html","title":"injectable - ExpenseTrackerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExpenseTrackerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expense-manager/expense-tracker.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, expenseService: ExpenseService)\n                    \n                \n                        \n                            \n                                Defined in src/expense-manager/expense-tracker.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { UserService } from \"./users/user.service\";\nimport { ExpenseService } from \"./expenses/expense.service\";\n\n@Injectable()\nexport class ExpenseTrackerService {\n  constructor(\n    private readonly userService: UserService,\n    private readonly expenseService: ExpenseService\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHash.html":{"url":"interfaces/IHash.html","title":"interface - IHash","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHash\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iam/password/hash/hash.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        compare\n                                    \n                                \n                                \n                                    \n                                        hash\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        compare\n                        \n                    \n                \n            \n            \n                \ncompare(data: string | Buffer, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/iam/password/hash/hash.interface.ts:3\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hash\n                        \n                    \n                \n            \n            \n                \nhash(data: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/iam/password/hash/hash.interface.ts:2\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IHash {\n  hash(data: string | Buffer): Promise;\n  compare(data: string | Buffer, encrypted: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IamModule.html":{"url":"modules/IamModule.html","title":"module - IamModule","body":"\n                   \n\n\n\n\n    Modules\n    IamModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IamModule\n\n\n\ncluster_IamModule_imports\n\n\n\ncluster_IamModule_providers\n\n\n\n\nPasswordModule\n\nPasswordModule\n\n\n\nIamModule\n\nIamModule\n\nIamModule -->\n\nPasswordModule->IamModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nIamModule -->\n\nUserModule->IamModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nIamModule -->\n\nAuthService->IamModule\n\n\n\n\n\nUserService\n\nUserService\n\nIamModule -->\n\nUserService->IamModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/iam/iam.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PasswordModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { PasswordModule } from \"./password/password.module\";\nimport { AuthService } from \"./auth/auth.service\";\nimport { AuthController } from \"./auth/auth.controller\";\nimport { UserService } from \"../expense-manager/users/user.service\";\nimport { UserModule } from \"../expense-manager/users/user.module\";\n\n@Module({\n  imports: [PasswordModule, UserModule],\n  providers: [AuthService, UserService],\n  controllers: [AuthController],\n})\nexport class IamModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdDto.html":{"url":"classes/IdDto.html","title":"class - IdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/id.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/id.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsPositive } from \"class-validator\";\n\nexport class IdDto {\n  @IsInt()\n  @IsPositive()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PasswordModule.html":{"url":"modules/PasswordModule.html","title":"module - PasswordModule","body":"\n                   \n\n\n\n\n    Modules\n    PasswordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PasswordModule\n\n\n\ncluster_PasswordModule_exports\n\n\n\ncluster_PasswordModule_providers\n\n\n\n\nPasswordProvider \n\nPasswordProvider \n\n\n\nPasswordModule\n\nPasswordModule\n\nPasswordProvider  -->\n\nPasswordModule->PasswordProvider \n\n\n\n\n\nPasswordProvider\n\nPasswordProvider\n\nPasswordModule -->\n\nPasswordProvider->PasswordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/iam/password/password.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PasswordProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PasswordProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PasswordProvider } from \"./password.provider\";\nimport { BcryptAlgorithmProvider } from \"./hash/bcrypt.algorithm.provider\";\n\n@Module({\n  providers: [PasswordProvider, BcryptAlgorithmProvider],\n  exports: [PasswordProvider],\n})\nexport class PasswordModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordProvider.html":{"url":"injectables/PasswordProvider.html","title":"injectable - PasswordProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PasswordProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iam/password/password.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                comparePassword\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bcryptAlgorithm: BcryptAlgorithmProvider)\n                    \n                \n                        \n                            \n                                Defined in src/iam/password/password.provider.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bcryptAlgorithm\n                                                  \n                                                        \n                                                                        BcryptAlgorithmProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        comparePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    comparePassword(userPassword: string | Buffer, storedPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/iam/password/password.provider.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userPassword\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                storedPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(password: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/iam/password/password.provider.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { BcryptAlgorithmProvider } from \"./hash/bcrypt.algorithm.provider\";\n\n@Injectable()\nexport class PasswordProvider {\n  constructor(private readonly bcryptAlgorithm: BcryptAlgorithmProvider) {}\n\n  async hashPassword(password: string | Buffer): Promise {\n    return await this.bcryptAlgorithm.hash(password);\n  }\n\n  async comparePassword(\n    userPassword: string | Buffer,\n    storedPassword: string\n  ): Promise {\n    return await this.bcryptAlgorithm.compare(userPassword, storedPassword);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PublicUserDto.html":{"url":"classes/PublicUserDto.html","title":"class - PublicUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PublicUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expense-manager/users/dto/public.user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    Readonly\n                                expenses\n                            \n                            \n                                    \n                                    Readonly\n                                firstName\n                            \n                            \n                                    \n                                    Readonly\n                                id\n                            \n                            \n                                    \n                                    Readonly\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/users/dto/public.user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        expenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Expense[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/users/dto/public.user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/users/dto/public.user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/users/dto/public.user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/users/dto/public.user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expense } from \"../../expenses/entity/expense.entity\";\nimport { Expose } from \"class-transformer\";\n\nexport class PublicUserDto {\n  @Expose()\n  readonly id: number;\n  @Expose()\n  readonly firstName: string;\n  @Expose()\n  readonly lastName: string;\n  @Expose()\n  readonly email: string;\n  @Expose()\n  readonly expenses: Expense[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expense-manager/users/dto/update.user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(UserBaseDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { UserBaseDto } from \"./user.base.dto\";\n\nexport class UpdateUserDto extends PartialType(UserBaseDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expense-manager/users/entity/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                expenses\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/users/entity/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        expenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Expense[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, expense => expense.user, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/users/entity/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/users/entity/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/users/entity/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/users/entity/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/users/entity/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Expense } from \"../../expenses/entity/expense.entity\";\nimport { Column, Entity, OneToMany, PrimaryGeneratedColumn } from \"typeorm\";\n\n@Entity(\"users\")\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @Column()\n  firstName: string;\n  @Column()\n  lastName?: string;\n  @Column({ unique: true })\n  email: string;\n  @Column()\n  password: string;\n  @OneToMany(() => Expense, (expense) => expense.user, { onDelete: \"CASCADE\" })\n  expenses: Expense[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserBaseDto.html":{"url":"classes/UserBaseDto.html","title":"class - UserBaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserBaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expense-manager/users/dto/user.base.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                expenses\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/users/dto/user.base.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        expenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Expense[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Expense})@Type(undefined)@ValidateNested({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/users/dto/user.base.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})@IsString()@IsNotEmpty()@Length(3, 25)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/users/dto/user.base.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})@Length(3, 25)@IsOptional()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-manager/users/dto/user.base.dto.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expense } from \"../../expenses/entity/expense.entity\";\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Length,\n  ValidateNested,\n} from \"class-validator\";\nimport { Type } from \"class-transformer\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nexport class UserBaseDto {\n  @ApiProperty({ type: String })\n  @IsString()\n  @IsNotEmpty()\n  @Length(3, 25)\n  readonly firstName: string;\n\n  @ApiProperty({ type: String })\n  @Length(3, 25)\n  @IsOptional()\n  @IsString()\n  @IsNotEmpty()\n  readonly lastName?: string;\n  @ApiProperty({ type: String })\n  @IsEmail()\n  @IsNotEmpty()\n  readonly email: string;\n\n  @ApiProperty({ type: Expense })\n  @Type(() => Expense)\n  @ValidateNested({ each: true })\n  readonly expenses: Expense[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/expense-manager/users/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { UserService } from \"./user.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { User } from \"./entity/user.entity\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expense-manager/users/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Private\n                                    Async\n                                findUserByEmail\n                            \n                            \n                                    Private\n                                    Async\n                                findUserById\n                            \n                            \n                                    Async\n                                findUserByIdentifier\n                            \n                            \n                                    Async\n                                ifEmailUsed\n                            \n                            \n                                    Private\n                                resultHelper\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in src/expense-manager/users/user.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/expense-manager/users/user.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Creates a new user based on the provided user data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to create the user with.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves to the newly created User object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByEmail(email: Email)\n                \n            \n\n\n                    \n                        \n                            Defined in src/expense-manager/users/user.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            Email\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        findUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/expense-manager/users/user.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserByIdentifier\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByIdentifier(identifier: Email | number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/expense-manager/users/user.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Finds a user based on the provided identifier, which can be an email or a number.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                identifier\n                                            \n                                                            Email | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe email or number identifier to search for the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves to the User object if found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ifEmailUsed\n                        \n                    \n                \n            \n            \n                \n                        \n                    ifEmailUsed(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/expense-manager/users/user.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Checks if a user with the provided email already exists.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe email to check for existence.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to a boolean indicating if the email is already in use.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resultHelper\n                        \n                    \n                \n            \n            \n                \n                        \n                    resultHelper(user: User | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/expense-manager/users/user.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(identifier: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/expense-manager/users/user.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identifier\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from \"@nestjs/common\";\nimport { DataSource } from \"typeorm\";\nimport { User } from \"./entity/user.entity\";\nimport { CreateUserDto } from \"./dto/create.user.dto\";\nimport { Email } from \"../../common/types/email/email.type\";\nimport { validateEmail } from \"../../common/types/email/email.util\";\nimport { UpdateUserDto } from \"./dto/update.user.dto\";\n\n@Injectable()\nexport class UserService {\n  constructor(private readonly dataSource: DataSource) {}\n\n  /**\n   * Creates a new user based on the provided user data.\n   *\n   * @param createUserDto - The data to create the user with.\n   * @returns A Promise that resolves to the newly created User object.\n   * @throws ConflictException if a user with the same email already exists.\n   * @throws InternalServerErrorException if an internal server error occurs during user creation.\n   */\n  async create(createUserDto: CreateUserDto): Promise {\n    const ifEmailUsed: boolean = await this.ifEmailUsed(createUserDto.email);\n    if (ifEmailUsed) throw new ConflictException(\"Email already exists\");\n\n    return this.dataSource.transaction(\n      async (transactionEntityManager) => {\n        try {\n          const newUser: User = transactionEntityManager.create(\n            User,\n            createUserDto\n          );\n\n          // This will throw NotFoundException() if !user\n          const validUser: User = this.resultHelper(newUser);\n\n          return await transactionEntityManager.save(validUser);\n        } catch (error) {\n          console.error(\n            `Error occurred during user creation: ${error.message}`\n          );\n\n          throw new InternalServerErrorException();\n        }\n      }\n    );\n  }\n\n  /**\n   * Checks if a user with the provided email already exists.\n   *\n   * @param email - The email to check for existence.\n   * @returns A Promise that resolves to a boolean indicating if the email is already in use.\n   * @throws InternalServerErrorException if an error occurs during the check process.\n   */\n  async ifEmailUsed(email: string): Promise {\n    return this.dataSource.transaction(async (userTransaction) => {\n      try {\n        const response = await userTransaction.count(User, {\n          where: { email: email },\n        });\n        return response > 0;\n      } catch (error) {\n        throw new InternalServerErrorException(\"Failed to check if user Exist\");\n      }\n    });\n  }\n\n  /**\n   * Finds a user based on the provided identifier, which can be an email or a number.\n   *\n   * @param identifier - The email or number identifier to search for the user.\n   * @returns A Promise that resolves to the User object if found.\n   * @throws UnauthorizedException if the identifier is not valid or authorized.\n   */\n  async findUserByIdentifier(identifier: Email | number): Promise {\n    if (typeof identifier === \"number\") {\n      return this.findUserById(identifier);\n    } else {\n      // Validate and handle email using the validateEmail function\n      try {\n        // This will throw BadRequestException – if the Email format is invalid\n        validateEmail(identifier);\n        return this.findUserByEmail(identifier); // If valid, search for the user by email\n      } catch (error) {\n        throw new BadRequestException(`Invalid identifier: ${error.message}`);\n      }\n    }\n  }\n\n  private async findUserById(id: number): Promise {\n    const user = await this.dataSource.transaction(\n      async (useTransaction) => {\n        return useTransaction.findOneBy(User, { id });\n      }\n    );\n\n    return this.resultHelper(user); // Handle user existence\n  }\n\n  private async findUserByEmail(email: Email): Promise {\n    const user = await this.dataSource.transaction(\n      async (useTransaction) => {\n        return useTransaction.findOneBy(User, { email: email as string }); // Ensure email is a string\n      }\n    );\n\n    return this.resultHelper(user); // Handle user existence\n  }\n\n  private resultHelper(user: User | null): User {\n    if (!user) {\n      throw new NotFoundException(); // Handle user not found\n    }\n    return user; // Return the user if found\n  }\n\n  async updateUser(\n    identifier: number,\n    updateUserDto: UpdateUserDto\n  ): Promise {\n    return this.dataSource.transaction(async (useTransaction) => {\n      const updatedUser: User = await useTransaction.preload(User, {\n        id: identifier,\n        ...updateUserDto,\n      });\n      const validUser = this.resultHelper(updatedUser);\n      try {\n        return await useTransaction.save(validUser);\n      } catch (error) {\n        throw new BadRequestException();\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateEnvVariables.html":{"url":"classes/ValidateEnvVariables.html","title":"class - ValidateEnvVariables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateEnvVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/env/validate.env.variables.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                APP_PORT\n                            \n                            \n                                    \n                                    \n                                    \n                                APP_PREFIX\n                            \n                            \n                                    \n                                    \n                                    \n                                DATASOURCE_DATABASE\n                            \n                            \n                                    \n                                    \n                                    \n                                DATASOURCE_HOST\n                            \n                            \n                                    \n                                    \n                                DATASOURCE_PASSWORD\n                            \n                            \n                                    \n                                    \n                                DATASOURCE_PORT\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                DATASOURCE_USERNAME\n                            \n                            \n                                    \n                                    \n                                    \n                                NODE_ENV\n                            \n                            \n                                    \n                                    \n                                SALT_ROUND\n                            \n                            \n                                    \n                                    \n                                    \n                                SWAGGER_DESC\n                            \n                            \n                                    \n                                    \n                                    \n                                SWAGGER_LICENCE\n                            \n                            \n                                    \n                                    \n                                    \n                                SWAGGER_LICENCE_URL\n                            \n                            \n                                    \n                                    \n                                    \n                                SWAGGER_PATH\n                            \n                            \n                                    \n                                    \n                                SWAGGER_SERV\n                            \n                            \n                                    \n                                    \n                                    \n                                SWAGGER_TITLE\n                            \n                            \n                                    \n                                    \n                                    \n                                SWAGGER_VERSION\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                EnvValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        APP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPositive()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/env/validate.env.variables.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        APP_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsSafeString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/env/validate.env.variables.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        DATASOURCE_DATABASE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsSafeString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/env/validate.env.variables.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        DATASOURCE_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsSafeString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/env/validate.env.variables.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATASOURCE_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsSafeString()@IsStrongPassword()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/env/validate.env.variables.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATASOURCE_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPositive()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/env/validate.env.variables.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        DATASOURCE_USERNAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@Length(3, 25)@IsSafeString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/env/validate.env.variables.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        NODE_ENV\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsSafeString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/env/validate.env.variables.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SALT_ROUND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPositive()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/env/validate.env.variables.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        SWAGGER_DESC\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsSafeString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/env/validate.env.variables.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        SWAGGER_LICENCE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsSafeString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/env/validate.env.variables.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        SWAGGER_LICENCE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsSafeString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/env/validate.env.variables.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        SWAGGER_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsSafeString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/env/validate.env.variables.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SWAGGER_SERV\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/env/validate.env.variables.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        SWAGGER_TITLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsSafeString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/env/validate.env.variables.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        SWAGGER_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsSafeString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/env/validate.env.variables.ts:80\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        EnvValidation\n                        \n                    \n                \n            \n            \n                \n                        \n                    EnvValidation(options: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/config/env/validate.env.variables.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsInt,\n  IsNotEmpty,\n  IsPositive,\n  IsString,\n  IsStrongPassword,\n  Length,\n  validateSync,\n} from \"class-validator\";\nimport { plainToInstance } from \"class-transformer\";\nimport { InternalServerErrorException } from \"@nestjs/common\";\nimport { IsSafeString } from \"../../common/decorators/is.safe.string.sec.decorator\";\n\nexport class ValidateEnvVariables {\n  //DB\n  @IsNotEmpty()\n  @IsString()\n  @Length(3, 25)\n  @IsSafeString()\n  DATASOURCE_USERNAME: string;\n\n  @IsSafeString()\n  @IsStrongPassword()\n  DATASOURCE_PASSWORD: string;\n  @IsNotEmpty()\n  @IsString()\n  @IsSafeString()\n  DATASOURCE_DATABASE: string;\n  @IsNotEmpty()\n  @IsString()\n  @IsSafeString()\n  DATASOURCE_HOST: string;\n  @IsPositive()\n  @IsInt()\n  DATASOURCE_PORT: number;\n\n  //BCRYPT\n  @IsPositive()\n  @IsInt()\n  SALT_ROUND: number;\n  // APP\n  @IsPositive()\n  @IsInt()\n  APP_PORT: number;\n  @IsNotEmpty()\n  @IsString()\n  @IsSafeString()\n  APP_PREFIX: string;\n  @IsNotEmpty()\n  @IsString()\n  @IsSafeString()\n  NODE_ENV: string;\n  //SWAGGER\n  @IsNotEmpty()\n  @IsString()\n  @IsSafeString()\n  SWAGGER_PATH: string;\n  @IsNotEmpty()\n  @IsString()\n  @IsSafeString()\n  SWAGGER_DESC: string;\n  @IsNotEmpty()\n  @IsString()\n  @IsSafeString()\n  SWAGGER_TITLE: string;\n  @IsNotEmpty()\n  @IsString()\n  @IsSafeString()\n  SWAGGER_LICENCE: string;\n  @IsNotEmpty()\n  @IsString()\n  @IsSafeString()\n  SWAGGER_LICENCE_URL: string;\n  @IsNotEmpty()\n  @IsString()\n  SWAGGER_SERV: string;\n  @IsNotEmpty()\n  @IsString()\n  @IsSafeString()\n  SWAGGER_VERSION: string;\n\n  // Custom validation method to check environment variables\n  public static EnvValidation(options: Record) {\n    const validated = plainToInstance(ValidateEnvVariables, options, {\n      enableImplicitConversion: true,\n    });\n    const errors = validateSync(validated, {\n      skipMissingProperties: false,\n    });\n\n    if (errors.length > 0) {\n      throw new InternalServerErrorException(\n        `${errors.length} environments variables failed validation ${errors.toString()}`\n      );\n    }\n\n    return validated;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/common/decorators/is.safe.string.sec.decorator.ts\n            \n            function\n            IsSafeString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dto/id.dto.ts\n            \n            class\n            IdDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/types/email/email.util.ts\n            \n            function\n            validateEmail\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/types/money/money.type.ts\n            \n            function\n            createMoney\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/types/money/money.type.ts\n            \n            variable\n            DEFAULT_CURRENCY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/types/money/valid.currencies.const.ts\n            \n            variable\n            validCurrenciesConst\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/types/money/validate.money.util.ts\n            \n            function\n            isValidCurrency\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/types/money/validate.money.util.ts\n            \n            function\n            validateMoney\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/db/db.config.ts\n            \n            variable\n            dataSourceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/db/db.config.ts\n            \n            variable\n            getDatabaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/env/validate.env.variables.ts\n            \n            class\n            ValidateEnvVariables\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/expense-manager/expense-tracker.service.ts\n            \n            injectable\n            ExpenseTrackerService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/expense-manager/expenses/entity/expense.entity.ts\n            \n            entity\n            Expense\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/expense-manager/expenses/expense.service.ts\n            \n            injectable\n            ExpenseService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/expense-manager/users/dto/create.user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/expense-manager/users/dto/public.user.dto.ts\n            \n            class\n            PublicUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/expense-manager/users/dto/update.user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/expense-manager/users/dto/user.base.dto.ts\n            \n            class\n            UserBaseDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/expense-manager/users/entity/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/expense-manager/users/user.service.ts\n            \n            injectable\n            UserService\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/iam/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/iam/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/iam/password/hash/bcrypt.algorithm.provider.ts\n            \n            class\n            BcryptAlgorithmProvider\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/iam/password/hash/hash.interface.ts\n            \n            interface\n            IHash\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/iam/password/password.provider.ts\n            \n            injectable\n            PasswordProvider\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.25\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            @types/money : ^0.2.3\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            money : ^0.2.0\n        \n            pg : ^8.13.0\n        \n            prettier-plugin-organize-imports : ^4.1.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ExpenseCategoryEnum   (src/.../expense.category.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/expense-manager/expenses/enum/expense.category.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ExpenseCategoryEnum\n                    \n                \n                        \n                            \n                                 GROCERIES\n                            \n                        \n                        \n                            \n                                Value : Groceries\n                            \n                        \n                        \n                            \n                                 LEISURE\n                            \n                        \n                        \n                            \n                                Value : Leisure\n                            \n                        \n                        \n                            \n                                 ELECTRONICS\n                            \n                        \n                        \n                            \n                                Value : Electronics\n                            \n                        \n                        \n                            \n                                 UTILITIES\n                            \n                        \n                        \n                            \n                                Value : Utilities\n                            \n                        \n                        \n                            \n                                 CLOTHING\n                            \n                        \n                        \n                            \n                                Value : Clothing\n                            \n                        \n                        \n                            \n                                 HEALTH\n                            \n                        \n                        \n                            \n                                Value : Health\n                            \n                        \n                        \n                            \n                                 OTHERS\n                            \n                        \n                        \n                            \n                                Value : Others\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createMoney   (src/.../money.type.ts)\n                        \n                        \n                            IsSafeString   (src/.../is.safe.string.sec.decorator.ts)\n                        \n                        \n                            isValidCurrency   (src/.../validate.money.util.ts)\n                        \n                        \n                            validateEmail   (src/.../email.util.ts)\n                        \n                        \n                            validateMoney   (src/.../validate.money.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/types/money/money.type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createMoney\n                        \n                    \n                \n            \n            \n                \ncreateMoney(amount: number, currency: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                currency\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    DEFAULT_CURRENCY\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         MoneyType\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/common/decorators/is.safe.string.sec.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsSafeString\n                        \n                    \n                \n            \n            \n                \nIsSafeString(validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationOptions\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/common/types/money/validate.money.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isValidCurrency\n                        \n                    \n                \n            \n            \n                \nisValidCurrency(currency: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currency\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateMoney\n                        \n                    \n                \n            \n            \n                \nvalidateMoney(amount: number, currency: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                currency\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    DEFAULT_CURRENCY\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         MoneyType\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/common/types/email/email.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validateEmail\n                        \n                    \n                \n            \n            \n                \nvalidateEmail(email: string)\n                \n            \n\n\n\n\n            \n                \n                        Validates the format of an email address.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The email address to validate.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Email\n\n                        \n                            \n                                The validated email address with the 'brand' symbol.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n  \n  \n  \n\n\nBuild an API for an expense tracker application.\n\nRoadmap.sh project link > https://roadmap.sh/projects/expense-tracker-api \n\nBuild an API for an expense tracker application. This API should allow users to create, read, update, and delete expenses. Users should be able to sign up and log in to the application. Each user should have their own set of expenses.\n\n \n\n\n\nFeatures\nHere are the features that you should implement in your Expense Tracker API:\n\n\nSign up as a new user.\nGenerate and validate JWTs for handling authentication and user session.\nList and filter your past expenses. You can add the following filters:\nPast week\nPast month\nLast 3 months\nCustom (to specify a start and end date of your choosing).\n\n\nAdd a new expense\nRemove existing expenses\nUpdate existing expenses\n\n\nConstraints\nYou can use any programming language and framework of your choice. You can use a database of your choice to store the data. You can use any ORM or database library to interact with the database.\n\nHere are some constraints that you should follow:\n\nYou’ll be using JWT (JSON Web Token) to protect the endpoints and to identify the requester.\nFor the different expense categories, you can use the following list (feel free to decide how to implement this as part of your data model):\nGroceries\nLeisure\nElectronics\nUtilities\nClothing\nHealth\nOthers\n\n\n\n\nSOLUTION\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Model\nFor an expense tracker, the data model for the Expense entity should capture all the necessary details for an expense entry, such as the user who made the expense, the amount, category, date, and any additional notes. It should also support filtering and allow for updating and deleting records.\n1. User Entity Data Model\nExample :@Entity(\"users\")\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @Column()\n  firstName: string;\n  @Column()\n  lastName?: string;\n  @Column({ unique: true })\n  email: Email;\n  @Column()\n  password: string;\n  @OneToMany(() => Expense, (expense) => expense.user)\n  expenses: Expense[];\n}2. Expense Entity Data Model\nExample :@Entity(\"expenses\")\nexport class Expense {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: \"bigint\" }) // Use bigint for amount stored in minor units (e.g., cents)\n  amount: number;\n  @Column({ type: \"varchar\", length: 3 }) // Store currency as a 3-letter code (ISO 4217)\n  currency: string;\n  @Column({\n    type: \"enum\",\n    enum: ExpenseCategoryEnum,\n    default: ExpenseCategoryEnum.OTHERS,\n  })\n  category: ExpenseCategoryEnum;\n  @Column()\n  description: string;\n  @Column({ type: Date })\n  date: Date;\n  @ManyToOne(() => User, (user) => user.expenses)\n  user: User;\n\n  @CreateDateColumn()\n  createdAt: Date;\n  @UpdateDateColumn()\n  updatedAt: Date;\n}3. ExpenseCategoryEnum Enum\nTo represent the fixed list of categories:\nExample :enum ExpenseCategoryEnum {\n  GROCERIES = \"Groceries\",\n  LEISURE = \"Leisure\",\n  ELECTRONICS = \"Electronics\",\n  UTILITIES = \"Utilities\",\n  CLOTHING = \"Clothing\",\n  HEALTH = \"Health\",\n  OTHERS = \"Others\",\n}Types definition\nEmail Type Definition\nExample ://src/common/types/email.type.ts\nexport type Email = string & { readonly brand: unique symbol };\n\n// src/common/util/email.util.ts\nexport function validateEmail(email: string): Email {\n  const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Basic email regex pattern\n  if (!emailPattern.test(email)) {\n    throw new BadRequestException(`Invalid email format ${email}`);\n  }\n  return email as Email; // Cast to an Email type\n}  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n src=\"https://img.shields.io/twitter/follow/nestframework.svg?style=social&label=Follow\">\n\n\nDescription\nRoadMap.sh Project description.\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Jordach Makaya\nLinkedin - jordachmakaya\nWakaTime - @jordach\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2024 Jordach Makaya\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppConfigurationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExpenseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExpenseTrackerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IamModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PasswordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ExpenseModule\n\n\n\ncluster_ExpenseModule_exports\n\n\n\ncluster_ExpenseModule_providers\n\n\n\ncluster_ExpenseTrackerModule\n\n\n\ncluster_ExpenseTrackerModule_imports\n\n\n\ncluster_ExpenseTrackerModule_providers\n\n\n\ncluster_IamModule\n\n\n\ncluster_IamModule_imports\n\n\n\ncluster_IamModule_providers\n\n\n\ncluster_PasswordModule\n\n\n\ncluster_PasswordModule_exports\n\n\n\ncluster_PasswordModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\n\nAppConfigurationModule\n\nAppConfigurationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppConfigurationModule->AppModule\n\n\n\n\n\nExpenseTrackerModule\n\nExpenseTrackerModule\n\nAppModule -->\n\nExpenseTrackerModule->AppModule\n\n\n\n\n\nIamModule\n\nIamModule\n\nAppModule -->\n\nIamModule->AppModule\n\n\n\n\n\nExpenseService \n\nExpenseService \n\n\n\nExpenseModule\n\nExpenseModule\n\nExpenseTrackerModule -->\n\nExpenseModule->ExpenseTrackerModule\n\n\n\nExpenseService  -->\n\nExpenseModule->ExpenseService \n\n\n\n\n\nExpenseService\n\nExpenseService\n\nExpenseModule -->\n\nExpenseService->ExpenseModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nExpenseTrackerModule -->\n\nUserModule->ExpenseTrackerModule\n\n\n\nIamModule -->\n\nUserModule->IamModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nExpenseTrackerService\n\nExpenseTrackerService\n\nExpenseTrackerModule -->\n\nExpenseTrackerService->ExpenseTrackerModule\n\n\n\n\n\nUserService\n\nUserService\n\nExpenseTrackerModule -->\n\nUserService->ExpenseTrackerModule\n\n\n\nIamModule -->\n\nUserService->IamModule\n\n\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nPasswordModule\n\nPasswordModule\n\nIamModule -->\n\nPasswordModule->IamModule\n\n\n\n\n\nPasswordProvider \n\nPasswordProvider \n\nPasswordProvider  -->\n\nPasswordModule->PasswordProvider \n\n\n\n\n\nAuthService\n\nAuthService\n\nIamModule -->\n\nAuthService->IamModule\n\n\n\n\n\nPasswordProvider\n\nPasswordProvider\n\nPasswordModule -->\n\nPasswordProvider->PasswordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : MIT\n        \n            Author : Jordach Makaya\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Email   (src/.../email.type.ts)\n                        \n                        \n                            MoneyType   (src/.../money.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/types/email/email.type.ts\n    \n    \n        \n            \n                \n                    \n                    Email\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/common/types/money/money.type.ts\n    \n    \n        \n            \n                \n                    \n                    MoneyType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            dataSourceFactory   (src/.../db.config.ts)\n                        \n                        \n                            DEFAULT_CURRENCY   (src/.../money.type.ts)\n                        \n                        \n                            getDatabaseConfig   (src/.../db.config.ts)\n                        \n                        \n                            validCurrenciesConst   (src/.../valid.currencies.const.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/db/db.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataSourceFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (options) => {\n  if (!options) {\n    throw new Error(\"DataSourceOption not provided\");\n  }\n  const dataSource = new DataSource(options);\n  await dataSource.initialize();\n  return dataSource;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  configService: ConfigService\n): Promise => ({\n  type: \"postgres\",\n  host: configService.get(\"DATASOURCE_HOST\"),\n  port: configService.get(\"DATASOURCE_PORT\"),\n  username: configService.get(\"DATASOURCE_USERNAME\"),\n  password: configService.get(\"DATASOURCE_PASSWORD\"),\n  database: configService.get(\"DATASOURCE_DATABASE\"),\n  entities: [],\n  synchronize: true,\n})\n                    \n                \n\n\n        \n    \n\n    src/common/types/money/money.type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_CURRENCY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"USD\"\n                    \n                \n\n\n        \n    \n\n    src/common/types/money/valid.currencies.const.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validCurrenciesConst\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"USD\",\n  \"EUR\",\n  \"GBP\",\n  \"AED\" /* ... and other supported currencies */,\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
